--T_EVENT_LOG
--日志表主表
EXEC SP_DROPTABLE('T_HR_LOG');
EXEC SP_DROPTABLE('T_LOG');
EXEC SP_DROPTABLE('T_EVENT_LOG');
CREATE TABLE T_EVENT_LOG
(
  C_ID         NUMBER(18)                       NOT NULL,
  C_BELONG     NUMBER(18),
  C_PERSON     NUMBER(18),
  C_TYPE       VARCHAR2(12 BYTE),
  C_TABLE      VARCHAR2(30 BYTE),
  C_KEY        VARCHAR2(255 BYTE),
  C_LEVEL      VARCHAR2(10 BYTE),
  C_CLASS      VARCHAR2(255 BYTE),
  C_MESSAGE    VARCHAR2(800 BYTE),
  C_FILE       VARCHAR2(255 BYTE),
  C_LINENUM    VARCHAR2(10 BYTE),
  C_LOGGER     VARCHAR2(255 BYTE),
  C_METHOD     VARCHAR2(255 BYTE),
  C_THREAD     VARCHAR2(255 BYTE),
  C_LOGDATE    DATE,
  C_STARTDATE  DATE
) LOGGING NOCACHE NOPARALLEL NOMONITORING;
--关键字
ALTER TABLE T_EVENT_LOG ADD (CONSTRAINT PK_EVENT_LOG PRIMARY KEY (C_ID));
--人员外键
ALTER TABLE T_EVENT_LOG ADD (CONSTRAINT FK_EVENT_LOG FOREIGN KEY (C_BELONG, C_PERSON) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));
--序列
EXEC SP_DROPSEQ('SEQ_HR_LOG');
EXEC SP_DROPSEQ('SEQ_LOG');
EXEC SP_DROPSEQ('SEQ_EVENT_LOG');
CREATE SEQUENCE SEQ_EVENT_LOG START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;

--自插入序列ID触发器
EXEC SP_DROPTRG('TRG_HR_LOGID');
EXEC SP_DROPTRG('TRG_LOGID');
CREATE OR REPLACE TRIGGER PEADMIN.TRG_EVENT_LOGID
BEFORE INSERT ON T_EVENT_LOG
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_EVENT_LOG.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/

ALTER TRIGGER PEADMIN.TRG_EVENT_LOGID DISABLE
/

--T_EVENT_LOGD
--日志表明细表
EXEC SP_DROPTABLE('T_EVENT_LOGD');
CREATE TABLE T_EVENT_LOGD
(
  C_ID      NUMBER(22,18),
  C_LOGID   NUMBER(22,18)                       NOT NULL,
  C_STRREP  VARCHAR2(800 BYTE)                  NOT NULL
) LOGGING NOCACHE NOPARALLEL NOMONITORING;
--关键字
ALTER TABLE T_EVENT_LOGD ADD (CONSTRAINT PK_EVENT_LOGD PRIMARY KEY (C_ID);
--日志表外键
ALTER TABLE T_EVENT_LOGD ADD (CONSTRAINT FK_EVENT_LOGD FOREIGN KEY (C_LOGID) REFERENCES T_EVENT_LOG (C_ID));
--序列
EXEC SP_DROPSEQ('SEQ_EVENT_LOGD');
CREATE SEQUENCE SEQ_EVENT_LOGD START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;

--自插入序列ID触发器
CREATE OR REPLACE TRIGGER PEADMIN.TRG_EVENT_LOGDID
BEFORE INSERT ON T_EVENT_LOGD
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_EVENT_LOGD.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/

ALTER TRIGGER PEADMIN.TRG_EVENT_LOGDID DISABLE
/
