--------------------------------------------------------------------------------
--考勤组表:T_HRCHK_GROUP
--考勤项目表:T_HRCHK_HLDAY, T_HRCHK_WORK, T_HRCHK_EXTR, T_HRCHK_DISP
--请假表:T_HRCHK_LONGPLAN
--出勤计划表:T_HRCHK_PLAN, T_HRCHK_PLANDT
--实际出勤表:T_HRCHK_FACT, T_HRCHK_FACTDT
--------------------------------------------------------------------------------
SET ECHO OFF
SET VERIFY OFF
SET HEADING OFF
--------------------------------------------------------------------------------
--考勤组表
--原表名
EXEC SP_DROPTABLE('T_HRCHK_DEPTTERM_PSN');
--新表名
EXEC SP_DROPTABLE('T_HRCHK_GROUP');
CREATE TABLE T_HRCHK_GROUP
(
  C_BELONG    NUMBER(18)          NOT NULL,
  C_ID        NUMBER(18)          NOT NULL,
  C_NO        VARCHAR2(6)         NOT NULL, --考勤组编号
  C_NAME      VARCHAR2(40)        NOT NULL, --考勤组名称
  C_DEPART    NUMBER(18)          NOT NULL, --考勤组管理部门
  C_COMMENT   VARCHAR2(255 BYTE)  NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字内部id
ALTER TABLE T_HRCHK_GROUP ADD (CONSTRAINT PK_HRCHK_GROUP PRIMARY KEY (C_BELONG, C_ID));
--管理部门外键
ALTER TABLE T_HRCHK_GROUP ADD (CONSTRAINT FK_HRCHK_GROUP_DEPT FOREIGN KEY (C_BELONG, C_DEPART) REFERENCES T_DEPARTMENT (C_BELONG,C_DEPARTMENTID));
--编号唯一
CREATE UNIQUE INDEX IDX_HRCHK_GROUP ON T_HRCHK_GROUP (C_BELONG, C_NO) LOGGING NOPARALLEL;
--内部id序列
EXEC SP_DROPSEQ('SEQ_HRCHK_GROUP');
CREATE SEQUENCE SEQ_HRCHK_GROUP START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;
CREATE OR REPLACE TRIGGER TRG_HRCHK_GROUPID
BEFORE INSERT ON T_HRCHK_GROUP
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_HRCHK_GROUP.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/
--考勤组成员定义
ALTER TABLE T_PERSONAL DROP CONSTRAINT FK_PERSONAL_HRCHKGROUP;
ALTER TABLE T_PERSONAL DROP (C_HRCHKGROUPID);
ALTER TABLE T_PERSONAL ADD (C_HRCHKGROUPID NUMBER(18));
--考勤组外键
ALTER TABLE T_PERSONAL ADD (CONSTRAINT FK_PERSONAL_HRCHKGROUP FOREIGN KEY (C_BELONG, C_HRCHKGROUPID) REFERENCES T_HRCHK_GROUP (C_BELONG,C_ID));
--------------------------------------------------------------------------------
--考勤项目表
--原表名
EXEC SP_DROPTABLE('T_HRCHK_ITEM');
--考勤项目表 - 0休假项目
EXEC SP_DROPTABLE('T_HRCHK_HLDAY');
CREATE TABLE T_HRCHK_HLDAY
(
  C_BELONG    NUMBER(18)                        NOT NULL,
  C_ID        NUMBER(18)                        NOT NULL,
  C_NO        VARCHAR2(16 BYTE)                 NOT NULL, --项目标号
  C_NAME      VARCHAR2(30 BYTE)                 NOT NULL, --项目名称
  C_COMMENT   VARCHAR2(255 BYTE)                NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字
ALTER TABLE T_HRCHK_HLDAY ADD (CONSTRAINT PK_HRCHK_HLDAY PRIMARY KEY (C_BELONG, C_ID));
EXEC SP_DROPSEQ('SEQ_HRCHK_HLDAY');
CREATE SEQUENCE SEQ_HRCHK_HLDAY START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;

CREATE OR REPLACE TRIGGER TRG_HRCHK_HLDAYID
BEFORE INSERT ON T_HRCHK_HLDAY
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_HRCHK_HLDAY.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/
--唯一性关键字
CREATE UNIQUE INDEX IDX_HRCHK_HLDAYNAME ON T_HRCHK_HLDAY (C_BELONG,C_NAME) LOGGING NOPARALLEL;
CREATE UNIQUE INDEX IDX_HRCHK_HLDAYNO ON T_HRCHK_HLDAY (C_BELONG,C_NO) LOGGING NOPARALLEL;
--外键
ALTER TABLE T_HRCHK_HLDAY ADD (CONSTRAINT FK_HRCHKHLDAY_BRANCH FOREIGN KEY (C_BELONG) REFERENCES T_BRANCH (C_BRANCHID));

--考勤项目表-1出勤项目-班次等
EXEC SP_DROPTABLE('T_HRCHK_WORK');
CREATE TABLE T_HRCHK_WORK
(
  C_BELONG    NUMBER(18)                        NOT NULL,
  C_ID        NUMBER(18)                        NOT NULL,
  C_NO        VARCHAR2(16 BYTE)                 NOT NULL, --项目标号
  C_NAME      VARCHAR2(30 BYTE)                 NOT NULL, --项目名称
  C_COMMENT   VARCHAR2(255 BYTE)                NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字
ALTER TABLE T_HRCHK_WORK ADD (CONSTRAINT PK_HRCHK_WORK PRIMARY KEY (C_BELONG, C_ID));
EXEC SP_DROPSEQ('SEQ_HRCHK_WORK');
CREATE SEQUENCE SEQ_HRCHK_WORK START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;

CREATE OR REPLACE TRIGGER TRG_HRCHK_WORKID
BEFORE INSERT ON T_HRCHK_WORK
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_HRCHK_WORK.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/
--唯一性关键字
CREATE UNIQUE INDEX IDX_HRCHK_WORKNAME ON T_HRCHK_WORK (C_BELONG,C_NAME) LOGGING NOPARALLEL;
CREATE UNIQUE INDEX IDX_HRCHK_WORKNO ON T_HRCHK_WORK (C_BELONG,C_NO) LOGGING NOPARALLEL;
--外键
ALTER TABLE T_HRCHK_WORK ADD (CONSTRAINT FK_HRCHKWORK_BRANCH FOREIGN KEY (C_BELONG) REFERENCES T_BRANCH (C_BRANCHID));

--考勤项目表-2加班项目
EXEC SP_DROPTABLE('T_HRCHK_EXTR');
CREATE TABLE T_HRCHK_EXTR
(
  C_BELONG    NUMBER(18)                        NOT NULL,
  C_ID        NUMBER(18)                        NOT NULL,
  C_NO        VARCHAR2(16 BYTE)                 NOT NULL, --项目标号
  C_NAME      VARCHAR2(30 BYTE)                 NOT NULL, --项目名称
  C_COMMENT   VARCHAR2(255 BYTE)                NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字
ALTER TABLE T_HRCHK_EXTR ADD (CONSTRAINT PK_HRCHK_EXTR PRIMARY KEY (C_BELONG, C_ID));
EXEC SP_DROPSEQ('SEQ_HRCHK_EXTR');
CREATE SEQUENCE SEQ_HRCHK_EXTR START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;

CREATE OR REPLACE TRIGGER TRG_HRCHK_EXTRID
BEFORE INSERT ON T_HRCHK_EXTR
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_HRCHK_EXTR.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/
--唯一性关键字
CREATE UNIQUE INDEX IDX_HRCHK_EXTRNAME ON T_HRCHK_EXTR (C_BELONG,C_NAME) LOGGING NOPARALLEL;
CREATE UNIQUE INDEX IDX_HRCHK_EXTRNO ON T_HRCHK_EXTR (C_BELONG,C_NO) LOGGING NOPARALLEL;
--外键
ALTER TABLE T_HRCHK_EXTR ADD (CONSTRAINT FK_HRCHKEXTR_BRANCH FOREIGN KEY (C_BELONG) REFERENCES T_BRANCH (C_BRANCHID));

--考勤项目表-3违纪项目-脱岗,迟到,早退,旷工
EXEC SP_DROPTABLE('T_HRCHK_DISP');
CREATE TABLE T_HRCHK_DISP
(
  C_BELONG    NUMBER(18)                        NOT NULL,
  C_ID        NUMBER(18)                        NOT NULL,
  C_NO        VARCHAR2(16 BYTE)                 NOT NULL, --项目标号
  C_NAME      VARCHAR2(30 BYTE)                 NOT NULL, --项目名称
  C_COMMENT   VARCHAR2(255 BYTE)                NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字
ALTER TABLE T_HRCHK_DISP ADD (CONSTRAINT PK_HRCHK_DISP PRIMARY KEY (C_BELONG, C_ID));
EXEC SP_DROPSEQ('SEQ_HRCHK_DISP');
CREATE SEQUENCE SEQ_HRCHK_DISP START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE NOCACHE NOORDER;

CREATE OR REPLACE TRIGGER TRG_HRCHK_DISPID
BEFORE INSERT ON T_HRCHK_DISP
FOR EACH ROW
DECLARE NEXT_ID NUMBER;
BEGIN
  SELECT SEQ_HRCHK_DISP.NEXTVAL INTO NEXT_ID FROM T_SEQFRO;
  :NEW.C_ID := NEXT_ID;
END;
/
--唯一性关键字
CREATE UNIQUE INDEX IDX_HRCHK_DISPNAME ON T_HRCHK_DISP (C_BELONG,C_NAME) LOGGING NOPARALLEL;
CREATE UNIQUE INDEX IDX_HRCHK_DISPNO ON T_HRCHK_DISP (C_BELONG,C_NO) LOGGING NOPARALLEL;
--外键
ALTER TABLE T_HRCHK_DISP ADD (CONSTRAINT FK_HRCHKDISP_BRANCH FOREIGN KEY (C_BELONG) REFERENCES T_BRANCH (C_BRANCHID));
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--长期休假计划(请假单)
EXEC SP_DROPTABLE('T_HRCHK_LONGPLAN');
CREATE TABLE T_HRCHK_LONGPLAN
(
  C_BELONG        NUMBER(18)              NOT NULL,
  C_NO            VARCHAR(16)             NOT NULL, --请假单号码
  C_PERSON        NUMBER(18)              NOT NULL, --请假人
  C_FROMDATE      DATE                    NOT NULL, --起始日期
  C_ENDDATE       DATE                    NOT NULL, --终止日期
  C_HLDAY         NUMBER(18)              NOT NULL, --休假项目
  C_LASTMODIFIER  NUMBER(18)              NOT NULL, --最后修改人
  C_CHECKER       NUMBER(18)              NOT NULL, --批准人
  C_CHECKDATE     DATE                    NOT NULL, --批准日期
  C_CHECKDSP      VARCHAR(255)            NULL      --批准描述
) LOGGING NOCACHE NOPARALLEL NOMONITORING;
--关键字
ALTER TABLE T_HRCHK_LONGPLAN ADD (CONSTRAINT PK_HRCHK_LONGPLAN PRIMARY KEY (C_BELONG, C_NO));
--验证人同时段不能重复
CREATE OR REPLACE PROCEDURE SPV_HRCHK_LONGPLAN(P_BELONG       IN NUMBER,
                                               P_NO           IN VARCHAR2,
                                               P_PERSON       IN NUMBER,
                                               P_FROMDATE     IN DATE,
                                               P_ENDDATE      IN DATE,
                                               P_HLDAY        IN NUMBER,
                                               P_LASTMODIFIER IN NUMBER,
                                               P_CHECKER      IN NUMBER,
                                               P_CHECKDATE    IN DATE,
                                               P_CHECKDSP     IN VARCHAR2) IS
PRAGMA AUTONOMOUS_TRANSACTION;
  V_NO        VARCHAR2(16);
  V_FROMDATE  DATE;
  V_ENDDATE   DATE;
  V_PWORKERID VARCHAR2(40);
  V_PNAME     VARCHAR2(40);
  V_HNO       VARCHAR2(16);
  V_HNAME     VARCHAR2(30);
  CURSOR CUR1 IS 
    SELECT LP.C_NO, LP.C_FROMDATE, LP.C_ENDDATE, H.C_NO, H.C_NAME, P.C_WORKERID, P.C_PERSONALNAME
      FROM T_HRCHK_LONGPLAN LP, T_HRCHK_HLDAY H, T_PERSONAL P
	  WHERE LP.C_BELONG = P_BELONG AND LP.C_PERSON = P_PERSON
	    AND ((LP.C_FROMDATE <= P_FROMDATE AND LP.C_ENDDATE >= P_FROMDATE) OR (LP.C_FROMDATE <= P_ENDDATE AND LP.C_ENDDATE >= P_ENDDATE))
		AND H.C_BELONG = LP.C_BELONG AND H.C_ID = LP.C_HLDAY
		AND P.C_BELONG = LP.C_BELONG AND P.C_PERSONALID = LP.C_PERSON
	  ORDER BY LP.C_NO ASC;
BEGIN
  OPEN CUR1;
  LOOP
    FETCH CUR1
      INTO V_NO, V_FROMDATE, V_ENDDATE, V_HNO, V_HNAME, V_PWORKERID, V_PNAME;
    EXIT WHEN CUR1%NOTFOUND;
    IF V_NO IS NOT NULL THEN
      RAISE_APPLICATION_ERROR(-20001, '人员' || V_PWORKERID || '[' || V_PNAME || ']已经有一张请假单[' 
	    || V_NO || '],起止时间为:[' || TO_CHAR(V_FROMDATE, 'yyyy-mm-dd') || '~' || TO_CHAR(V_ENDDATE, 'yyyy-mm-dd') 
		|| '].' || CHR(13) || '与此起止时间[' || TO_CHAR(P_FROMDATE, 'yyyy-mm-dd') || '~' || TO_CHAR(P_ENDDATE, 'yyyy-mm-dd') 
		|| ']冲突!' || CHR(13) || '一个时间段内只能有一张请假单!');
    END IF;
  END LOOP;
  CLOSE CUR1;
END SPV_HRCHK_LONGPLAN;
/

CREATE OR REPLACE TRIGGER PEADMIN.TRG_HRCHK_LONGPLAN 
  BEFORE INSERT OR UPDATE OF C_FROMDATE, C_ENDDATE
  ON T_HRCHK_LONGPLAN FOR EACH ROW
BEGIN
  SPV_HRCHK_LONGPLAN(:NEW.C_BELONG, :NEW.C_NO, :NEW.C_PERSON, :NEW.C_FROMDATE, :NEW.C_ENDDATE, :NEW.C_HLDAY, :NEW.C_LASTMODIFIER, :NEW.C_CHECKER, :NEW.C_CHECKDATE, :NEW.C_CHECKDSP);
END;
/

--外键
ALTER TABLE T_HRCHK_LONGPLAN ADD (CONSTRAINT FK_HRCHKLONGPLAN_BRANCH FOREIGN KEY (C_BELONG) REFERENCES T_BRANCH (C_BRANCHID));
ALTER TABLE T_HRCHK_LONGPLAN ADD (CONSTRAINT FK_HRCHKLONGPLAN_PSN FOREIGN KEY (C_BELONG, C_PERSON) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));
ALTER TABLE T_HRCHK_LONGPLAN ADD (CONSTRAINT FK_HRCHKLONGPLAN_HLDAY FOREIGN KEY (C_BELONG, C_HLDAY) REFERENCES T_HRCHK_HLDAY (C_BELONG,C_ID));
ALTER TABLE T_HRCHK_LONGPLAN ADD (CONSTRAINT FK_HRCHKLONGPLAN_CHK FOREIGN KEY (C_BELONG, C_CHECKER) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));
ALTER TABLE T_HRCHK_LONGPLAN ADD (CONSTRAINT FK_HRCHKLONGPLAN_DOPSN FOREIGN KEY (C_BELONG, C_LASTMODIFIER) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));
--------------------------------------------------------------------------------
--出勤计划表凭证头
EXEC SP_DROPTABLE('T_HRCHK_PLAN');
CREATE TABLE T_HRCHK_PLAN
(
  C_BELONG    NUMBER(18)          NOT NULL,
  C_NO        VARCHAR2(30 BYTE)   NOT NULL, --凭证号
  C_DATE      DATE                NOT NULL, --起点日期
  C_DEPART    NUMBER(18)          NOT NULL, --部门
  C_OFFICE    VARCHAR2(40 BYTE)   NOT NULL, --考勤组名称
  C_CHECKDATE DATE                NOT NULL, --修改日期
  C_CHECKBY   NUMBER(18)          NOT NULL, --录入人
  C_COMMENT   VARCHAR2(255 BYTE)  NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字
ALTER TABLE T_HRCHK_PLAN ADD (CONSTRAINT PK_HRCHK_PLAN PRIMARY KEY (C_BELONG, C_NO));
--外键
ALTER TABLE T_HRCHK_PLAN ADD (CONSTRAINT FK_HRCHKPLAN_DEPT FOREIGN KEY (C_BELONG, C_DEPART) REFERENCES T_DEPARTMENT (C_BELONG,C_DEPARTMENTID));
ALTER TABLE T_HRCHK_PLAN ADD (CONSTRAINT FK_HRCHKPLAN_CHECK FOREIGN KEY (C_BELONG, C_CHECKBY) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));

--出勤计划表明细
EXEC SP_DROPTABLE('T_HRCHK_PLANDT');
CREATE TABLE T_HRCHK_PLANDT
(
  C_BELONG  NUMBER(18)          NOT NULL,
  C_HDNO    VARCHAR2(30 BYTE)   NOT NULL, --凭证号
  C_NO      NUMBER(6)           NOT NULL, --序号
  C_PERSON  NUMBER(18)          NOT NULL, --人
  C_DATE    DATE                NOT NULL, --日期
  C_HLDAY   NUMBER(18)          NULL, --休假计划
  C_WORK    NUMBER(18)          NULL, --出勤计划
  C_EXTR    NUMBER(18)          NULL  --加班计划  
) LOGGING NOCACHE NOPARALLEL NOMONITORING;
--关键字
ALTER TABLE T_HRCHK_PLANDT ADD (CONSTRAINT PK_HRCHK_PLANDT PRIMARY KEY (C_BELONG, C_HDNO, C_NO));
--唯一性索引
CREATE UNIQUE INDEX IDX_HRCHK_PLANDT ON T_HRCHK_PLANDT (C_BELONG, C_PERSON, C_DATE) LOGGING NOPARALLEL;
--外键
ALTER TABLE T_HRCHK_PLANDT ADD (CONSTRAINT FK_HRCHK_PLANDT_HDNO FOREIGN KEY (C_BELONG, C_HDNO) REFERENCES T_HRCHK_PLAN (C_BELONG,C_NO));
ALTER TABLE T_HRCHK_PLANDT ADD (CONSTRAINT FK_HRCHK_PLANDT_PSN FOREIGN KEY (C_BELONG, C_PERSON) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));
ALTER TABLE T_HRCHK_PLANDT ADD (CONSTRAINT FK_HRCHK_PLANDT_HLDAY FOREIGN KEY (C_BELONG, C_HLDAY) REFERENCES T_HRCHK_HLDAY (C_BELONG,C_ID));
ALTER TABLE T_HRCHK_PLANDT ADD (CONSTRAINT FK_HRCHK_PLANDT_WORK FOREIGN KEY (C_BELONG, C_WORK) REFERENCES T_HRCHK_WORK (C_BELONG,C_ID));
ALTER TABLE T_HRCHK_PLANDT ADD (CONSTRAINT FK_HRCHK_PLANDT_EXTR FOREIGN KEY (C_BELONG, C_EXTR) REFERENCES T_HRCHK_EXTR (C_BELONG,C_ID));
--------------------------------------------------------------------------------
--实际出勤表凭证头
EXEC SP_DROPTABLE('T_HRCHK_FACTHD');
EXEC SP_DROPTABLE('T_HRCHK_FACT');
CREATE TABLE T_HRCHK_FACT
(
  C_BELONG    NUMBER(18)          NOT NULL,
  C_NO        VARCHAR2(30 BYTE)   NOT NULL, --凭证号
  C_DATE      DATE                NOT NULL, --起点日期
  C_DEPART    NUMBER(18)          NOT NULL, --部门
  C_OFFICE    VARCHAR2(40 BYTE)   NOT NULL, --考勤组名称
  C_CHECKDATE DATE                NOT NULL, --修改日期
  C_CHECKBY   NUMBER(18)          NOT NULL, --录入人
  C_COMMENT   VARCHAR2(255 BYTE)  NULL
) LOGGING NOCACHE NOPARALLEL MONITORING;
--关键字
ALTER TABLE T_HRCHK_FACT ADD (CONSTRAINT PK_HRCHK_FACT PRIMARY KEY (C_BELONG, C_NO));
--外键
ALTER TABLE T_HRCHK_FACT ADD (CONSTRAINT FK_HRCHKFACT_DEPT FOREIGN KEY (C_BELONG, C_DEPART) REFERENCES T_DEPARTMENT (C_BELONG,C_DEPARTMENTID));
ALTER TABLE T_HRCHK_FACT ADD (CONSTRAINT FK_HRCHKFACT_CHECK FOREIGN KEY (C_BELONG, C_CHECKBY) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));

--实际出勤表明细
EXEC SP_DROPTABLE('T_HRCHK_FACTDT');
CREATE TABLE T_HRCHK_FACTDT
(
  C_BELONG  NUMBER(18)          NOT NULL,
  C_HDNO    VARCHAR2(30 BYTE)   NOT NULL, --凭证号
  C_NO      NUMBER(6)           NOT NULL, --序号
  C_PERSON  NUMBER(18)          NOT NULL, --人
  C_DATE    DATE                NOT NULL, --日期
  C_HLDAY   NUMBER(18)          NULL, --休假项目
  C_WORK    NUMBER(18)          NULL, --出勤项目
  C_EXTR    NUMBER(18)          NULL, --加班项目  
  C_DISP    NUMBER(18)          NULL  --违纪项目
) LOGGING NOCACHE NOPARALLEL NOMONITORING;
--关键字
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT PK_HRCHK_FACTDT PRIMARY KEY (C_BELONG, C_HDNO, C_NO));
--唯一性索引
CREATE UNIQUE INDEX IDX_HRCHK_FACTDT ON T_HRCHK_FACTDT (C_BELONG, C_PERSON, C_DATE) LOGGING NOPARALLEL;
--外键
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT FK_HRCHK_FACTDT_HDNO FOREIGN KEY (C_BELONG, C_HDNO) REFERENCES T_HRCHK_FACT (C_BELONG,C_NO));
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT FK_HRCHK_FACTDT_PSN FOREIGN KEY (C_BELONG, C_PERSON) REFERENCES T_PERSONAL (C_BELONG,C_PERSONALID));
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT FK_HRCHK_FACTDT_HLDAY FOREIGN KEY (C_BELONG, C_HLDAY) REFERENCES T_HRCHK_HLDAY (C_BELONG,C_ID));
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT FK_HRCHK_FACTDT_WORK FOREIGN KEY (C_BELONG, C_WORK) REFERENCES T_HRCHK_WORK (C_BELONG,C_ID));
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT FK_HRCHK_FACTDT_EXTR FOREIGN KEY (C_BELONG, C_EXTR) REFERENCES T_HRCHK_EXTR (C_BELONG,C_ID));
ALTER TABLE T_HRCHK_FACTDT ADD (CONSTRAINT FK_HRCHK_FACTDT_DISP FOREIGN KEY (C_BELONG, C_DISP) REFERENCES T_HRCHK_DISP (C_BELONG,C_ID));
