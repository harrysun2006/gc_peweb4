<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:salary="com.gc.hr.view.salary.*"
                preinitialize="onPreinitialize()" verticalScrollPolicy="off" width="100%"
                height="100%">
  <mx:AdvancedDataGrid id="adg" width="100%" height="100%" dataProvider="{ac}" editable="true"
                       horizontalScrollPolicy="on" lockedColumnCount="4"
                       labelFunction="{CommonUtil.gridLabelFunction}"
                       creationComplete="onCreationComplete()">
    <mx:groupedColumns>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.depart.name"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.office"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.workerId"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.name"/>
      <mx:AdvancedDataGridColumnGroup 
                                      headerText="{resourceManager.getString('gcc_hr', 'salDeptPsn.detail')}"
                                      textAlign="center">
        <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.depart.name"/>
        <mx:AdvancedDataGridColumn dataField="bank"/>
        <mx:AdvancedDataGridColumn dataField="bankCard"/>
        <mx:AdvancedDataGridColumn dataField="comment"/>
      </mx:AdvancedDataGridColumnGroup>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.allotDate"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.type"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.grade"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.fkPosition.name"/>
      <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.person.upgradeDate"/>
    </mx:groupedColumns>
  </mx:AdvancedDataGrid>
  <mx:HBox horizontalAlign="center" width="100%" paddingTop="10" paddingBottom="10">
    <mx:Button label="{resourceManager.getString('gcc', 'ok')}" click="confirm(event)"/>
    <mx:Button label="{resourceManager.getString('gcc', 'cancel')}" click="cancel(event)"/>
  </mx:HBox>

  <mx:Script>
    <![CDATA[
      import mx.events.CloseEvent;
      import mx.rpc.events.ResultEvent;
      import mx.managers.PopUpManager;
      import mx.collections.ArrayCollection;
      import mx.controls.Alert;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;

      import com.gc.Constants;
      import com.gc.CommonEvent;
      import com.gc.hr.Events;
      import com.gc.hr.model.SalDeptPsn;
      import com.gc.hr.model.SalDeptPsnPK;
      import com.gc.common.model.Person;
      import com.gc.common.model.Department;
      import com.gc.common.controller.BaseController;
      import com.gc.common.controller.UserController;
      import com.gc.util.CommonUtil;

      [Bindable]
      private var ac:ArrayCollection=new ArrayCollection();
      private var fields:Array;

      private function onPreinitialize():void
      {
        title=resourceManager.getString('gcc_hr', 'salDeptPsn.assign');
        fields=["bank", "bankCard", "comment"];
        addEventListener(CommonEvent.CREATED, function(e:CommonEvent):void
          {
            var list:Array=e.args;
            list.forEach(function(person:Person, index:int, arr:Array):void
              {
                var salDeptPsn:SalDeptPsn=new SalDeptPsn();
                salDeptPsn.id=new SalDeptPsnPK();
                salDeptPsn.id.branch=person.branch;
                salDeptPsn.id.person=person;
                ac.addItem(salDeptPsn);
              });
          });
        addEventListener(CommonEvent.CLOSED, cancel);
        addEventListener(CommonEvent.RETURN, onReturn);
      }

      private function onCreationComplete():void
      {
        CommonUtil.setDataGridColumns(adg, 'gcc_hr', 'salDeptPsn', function(obj:Object):void
          {
            if (obj is AdvancedDataGridColumn)
            {
              var column:AdvancedDataGridColumn=obj as AdvancedDataGridColumn;
              column.editable=fields.indexOf(column.dataField) >= 0;
            }
          });
        CommonUtil.popupWindow(DeptPsnSelect, "", this);
      }

      private function onReturn(e:CommonEvent):void
      {
        e.stopImmediatePropagation();
        var list:Array=e.args;
        var depart:Department=list[0] as Department;
        var bank:String=list[1] as String;
        for each (var obj:SalDeptPsn in ac)
        {
          obj.id.depart=depart;
          obj.bank=bank == "" ? null : bank;
        }
        ac.refresh();
        adg.validateProperties();
      }

      private function confirm(e:Event):void
      {
        BaseController.addObjects(ac, function(e:ResultEvent):void
          {
            Alert.show(resourceManager.getString('gcc', 'save.success'), Constants.APP_NAME, Alert.OK, null, function(e:CloseEvent):void
              {
                owner.dispatchEvent(new Events(Events.ADD_SALDEPTPSN, null, ac.source));
                dispatchEvent(new CommonEvent(CommonEvent.CLOSED));
              }, Constants.ICON32_INFO);
          });
      }

      private function cancel(e:Event):void
      {
        PopUpManager.removePopUp(this);
      }
    ]]>
  </mx:Script>
</mx:TitleWindow>
