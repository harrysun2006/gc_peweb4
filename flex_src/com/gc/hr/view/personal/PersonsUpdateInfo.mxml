<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
                preinitialize="onPreinitialize()" creationComplete="onCreationComplete()">
  <mx:VBox id="vbox" width="100%" height="100%" autoLayout="true">
    <mx:AdvancedDataGrid id="adg" width="100%" height="100%" horizontalScrollPolicy="auto"
                         editable="true" sortableColumns="false" itemRenderer="mx.controls.Label"
                         labelFunction="{CommonUtil.gridLabelFunction}" lockedColumnCount="3"
                         keyDown="CommonUtil.gridKeyDown(event)">
      <mx:groupedColumns>
        <mx:AdvancedDataGridColumn dataField="{Constants.PROP_NAME_SERIAL}" width="64"
                                   labelFunction="{CommonUtil.serialLabelFunction}"
                                   styleFunction="{CommonUtil.serialStyleFunction}"/>
        <mx:AdvancedDataGridColumn dataField="name" editable="false"/>
        <mx:AdvancedDataGridColumn dataField="workerId" editable="false"/>
        <mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
                                        headerText="{resourceManager.getString('gcc_hr', 'person.manage.update.info.page1')}"
                                        textAlign="left" editable="false">
          <mx:AdvancedDataGridColumn dataField="pid"/>
          <mx:AdvancedDataGridColumn dataField="sex" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="people" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="nativePlace" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="regAddress"/>
          <mx:AdvancedDataGridColumn dataField="birthday" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="marryStatus" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="annuities"/>
          <mx:AdvancedDataGridColumn dataField="accumulation"/>
          <mx:AdvancedDataGridColumn dataField="chkGroup" dataTipField="chkGroup.name"
                                     editorDataField="selectedItem" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="onDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
                                        headerText="{resourceManager.getString('gcc_hr', 'person.manage.update.info.page4')}"
                                        textAlign="left" editable="false">
          <mx:AdvancedDataGridColumn dataField="fillTableDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="commend"/>
          <mx:AdvancedDataGridColumn dataField="workDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="retireDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="serviceLength"/>
          <mx:AdvancedDataGridColumn dataField="inDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="outDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="workLength"/>
          <mx:AdvancedDataGridColumn dataField="groupNo"/>
          <mx:AdvancedDataGridColumn dataField="contractNo"/>
          <mx:AdvancedDataGridColumn dataField="contr1From" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="contr1End" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="contractReason"/>
          <mx:AdvancedDataGridColumn dataField="contr2From" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="contr2End" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <!--mx:AdvancedDataGridColumn dataField="workType"/-->
          <mx:AdvancedDataGridColumn dataField="level" itemEditor="{numberInput}"
                                     formatter="{Constants.NUMBER_FORMATTER_N0}"/>
          <mx:AdvancedDataGridColumn dataField="techLevel"/>
          <mx:AdvancedDataGridColumn dataField="responsibility" itemEditor="{textArea}"/>
          <mx:AdvancedDataGridColumn dataField="cert1No"/>
          <mx:AdvancedDataGridColumn dataField="cert1NoDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
          <mx:AdvancedDataGridColumn dataField="cert2No"/>
          <mx:AdvancedDataGridColumn dataField="cert2NoHex"/>
          <mx:AdvancedDataGridColumn dataField="serviceNo"/>
          <mx:AdvancedDataGridColumn dataField="serviceNoDate" editorDataField="selectedDate"
                                     itemEditor="{dateField}"/>
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
                                        headerText="{resourceManager.getString('gcc_hr', 'person.manage.update.info.page5')}"
                                        textAlign="left" editable="false">
          <mx:AdvancedDataGridColumn dataField="frontWorkResume" itemEditor="{textArea}"/>
          <mx:AdvancedDataGridColumn dataField="frontTrainingResume" itemEditor="{textArea}"/>
          <mx:AdvancedDataGridColumn dataField="specification" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="degree" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="graduate" itemEditor="{comboBox}"/>
          <mx:AdvancedDataGridColumn dataField="skill" itemEditor="{textArea}"/>
          <mx:AdvancedDataGridColumn dataField="lanCom" itemEditor="{textArea}"/>
          <mx:AdvancedDataGridColumn dataField="national"/>
          <mx:AdvancedDataGridColumn dataField="state"/>
          <mx:AdvancedDataGridColumn dataField="city"/>
          <mx:AdvancedDataGridColumn dataField="address"/>
          <mx:AdvancedDataGridColumn dataField="zip" itemEditor="{numberInput}"/>
          <mx:AdvancedDataGridColumn dataField="telephone"/>
          <mx:AdvancedDataGridColumn dataField="email"/>
          <mx:AdvancedDataGridColumn dataField="officeTel"/>
          <mx:AdvancedDataGridColumn dataField="officeExt"/>
          <mx:AdvancedDataGridColumn dataField="officeFax"/>
          <mx:AdvancedDataGridColumn dataField="comment" itemEditor="{textArea}"/>
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
                                        headerText="{resourceManager.getString('gcc_hr', 'person.manage.update.info.page2')}"
                                        textAlign="left" editable="false">
          <mx:AdvancedDataGridColumn dataField="allotDate"/>
          <mx:AdvancedDataGridColumn dataField="allotReason"/>
          <mx:AdvancedDataGridColumn dataField="depart" dataTipField="depart.name"/>
          <mx:AdvancedDataGridColumn dataField="office"/>
          <mx:AdvancedDataGridColumn dataField="line" dataTipField="line.name"/>
          <mx:AdvancedDataGridColumn dataField="bus" dataTipField="bus.authNo"/>
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
                                        headerText="{resourceManager.getString('gcc_hr', 'person.manage.update.info.page3')}"
                                        textAlign="left" editable="false">
          <mx:AdvancedDataGridColumn dataField="upgradeDate"/>
          <mx:AdvancedDataGridColumn dataField="upgradeReason"/>
          <mx:AdvancedDataGridColumn dataField="type"/>
          <mx:AdvancedDataGridColumn dataField="fkPosition" dataTipField="fkPosition.name"/>
          <mx:AdvancedDataGridColumn dataField="regBelong"/>
          <mx:AdvancedDataGridColumn dataField="party"/>
          <mx:AdvancedDataGridColumn dataField="grade"/>
          <mx:AdvancedDataGridColumn dataField="schooling"/>
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumn width="0"/>
      </mx:groupedColumns>
    </mx:AdvancedDataGrid>
    <mx:HBox horizontalAlign="center" width="100%" paddingTop="10" paddingBottom="10">
      <mx:Button label="{resourceManager.getString('gcc', 'save')}" click="update(event)"/>
      <mx:Button label="{resourceManager.getString('gcc', 'cancel')}" click="close(event)"/>
    </mx:HBox>
  </mx:VBox>
  <mx:Script>
    <![CDATA[
      import mx.collections.ArrayCollection;
      import mx.collections.IList;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridListData;
      import mx.controls.Alert;
      import mx.controls.ComboBox;
      import mx.controls.DateField;
      import mx.controls.Label;
      import mx.controls.TextInput;
      import mx.events.FlexEvent;
      import mx.rpc.events.ResultEvent;
      import mx.utils.ObjectUtil;

      import com.gc.Constants;
      import com.gc.CommonEvent;
      import com.gc.common.controller.UserController;
      import com.gc.common.model.Person;
      import com.gc.controls.AdvancedClassFactory;
      import com.gc.controls.AutoCompleteComboBox;
      import com.gc.controls.advancedDataGridClasses.SuperDataGridHeaderRenderer;
      import com.gc.controls.PopUpTextArea;
      import com.gc.hr.controller.CheckController;
      import com.gc.hr.controller.PersonalController;
      import com.gc.util.CommonUtil;

      [Bindable]
      private var comboBox:AdvancedClassFactory;
      [Bindable]
      private var dateField:AdvancedClassFactory;
      [Bindable]
      private var numberInput:AdvancedClassFactory;
      [Bindable]
      private var textArea:AdvancedClassFactory;
      [Bindable]
      private var header:AdvancedClassFactory;
      private var list0:ArrayCollection;
      private var list1:ArrayCollection;
      private var lists:Object;
      private var fields:Array;

      /*
         all fields=["id", "branch", "name", "workerId", "pid", "sex", "people", "nativePlace", "regAddress", "birthday", "marryStatus", "annuities", "accumulation", "onDate", "downDate", "downReason",
         "upgradeDate", "upgradeReason", "type", "regBelong", "party", "grade", "schooling",
         "allotDate", "allotReason", "depart", "office", "line", "bus", "fkPosition",
         "fillTableDate", "commend", "workDate", "retireDate", "serviceLength", "inDate", "outDate", "workLength", "groupNo", "contractNo", "contr1From", "contr1End", "contractReason", "contr2From", "contr2End", "workType", "level", "techLevel", "responsibility", "cert1No", "cert1NoDate", "cert2No", "cert2NoHex", "serviceNo", "serviceNoDate",
         "frontWorkResume", "frontTrainingResume", "specification", "degree", "graduate", "skill", "lanCom", "national", "state", "city", "address", "zip", "telephone", "email", "officeTel", "officeExt", "officeFax", "comment"];
         non-null fields=["id", "branch", "name", "workderId", "onDate", "downDate", "upgradeDate", "type", "allotDate", "depart"];
       */
      private function init():void
      {
        lists={sex:Constants.GENDERS, 
            people:PersonalController.peopleList, 
            nativePlace:PersonalController.nativePlaceList,
            marryStatus:PersonalController.marryStatusList, 
            specification:PersonalController.jobSpecList, 
            degree:PersonalController.schDegreeList, 
            graduate:PersonalController.schGraduateList,
            type:PersonalController.hireTypeList, 
            fkPosition:PersonalController.positionList, 
            regBelong:PersonalController.regBranchList,
            party:PersonalController.polPartyList, 
            grade:PersonalController.jobGradeList, 
            schooling:PersonalController.schoolingList,
            chkGroup:CheckController.groupList};
      }

      private function onPreinitialize():void
      {
        if (UserController.hrHead)
          fields=["name", "workerId", "pid", "sex", "people", "nativePlace", "regAddress", "birthday", "marryStatus", "annuities", "accumulation", "chkGroup", "onDate", "downDate", "downReason",
            "fillTableDate", "commend", "workDate", "retireDate", "serviceLength", "inDate", "outDate", "workLength", "groupNo", "contractNo", "contr1From", "contr1End", "contractReason", "contr2From", "contr2End", "workType", "level", "techLevel", "responsibility", "cert1No", "cert1NoDate", "cert2No", "cert2NoHex", "serviceNo", "serviceNoDate",
            "frontWorkResume", "frontTrainingResume", "specification", "degree", "graduate", "skill", "lanCom", "national", "state", "city", "address", "zip", "telephone", "email", "officeTel", "officeExt", "officeFax", "comment"];
        else if (UserController.hrSub)
          fields=["pid", "sex", "people", "nativePlace", "regAddress", "birthday", "marryStatus", "annuities", "chkGroup", "accumulation", "downDate", "downReason",
            "fillTableDate", "commend", "workDate", "retireDate", "serviceLength", "inDate", "outDate", "workLength", "contractNo", "contr1End", "contractReason", "contr2From", "contr2End", "workType", "level", "techLevel", "responsibility", "cert1No", "cert1NoDate", "cert2No", "cert2NoHex", "serviceNo", "serviceNoDate",
            "frontWorkResume", "frontTrainingResume", "specification", "degree", "graduate", "skill", "lanCom", "national", "state", "city", "address", "zip", "telephone", "email", "officeTel", "officeExt", "officeFax", "comment"];
        else
          fields=[];
        comboBox=new AdvancedClassFactory(ComboBox);
        comboBox.properties={itemRenderer:new ClassFactory(Label)};
        comboBox.listeners=[{type:FlexEvent.CREATION_COMPLETE, listener:onComboBoxCreateComplete}
          , {type:KeyboardEvent.KEY_UP, listener:CommonUtil.keyUp}];
        dateField=new AdvancedClassFactory(DateField);
        dateField.properties={formatString:Constants.DATE_FORMAT, showToday:true, yearNavigationEnabled:true, editable:true};
        numberInput=new AdvancedClassFactory(TextInput);
        numberInput.properties={restrict:"0-9"};
        textArea=new AdvancedClassFactory(PopUpTextArea);
        header=new AdvancedClassFactory(SuperDataGridHeaderRenderer);
      }

      private function onCreationComplete():void
      {
        CommonUtil.setDataGridColumns(adg, "gcc", "person", function(obj:Object):void
          {
            if (obj is AdvancedDataGridColumn)
            {
              var column:AdvancedDataGridColumn=obj as AdvancedDataGridColumn;
              column.editable=(fields.indexOf(column.dataField) >= 0);
            }
          });
        addEventListener(CommonEvent.CREATED, onCreated);
        this.setFocus();
        adg.width=vbox.width=width-viewMetricsAndPadding.left-viewMetricsAndPadding.right;
      }

      private function onCreated(e:CommonEvent):void
      {
        if (e.args == null)
          return;
        list0=new ArrayCollection(e.args.filter(function(item:Object, idx:uint, arr:Array):Boolean
          {
            return (item.downDate >= Constants.MAX_DATE);
          }));
        list1=ObjectUtil.copy(list0) as ArrayCollection;
        adg.dataProvider=list1;
        adg.validateNow();
        if (adg.dataProvider.length <= 0)
        {
          close();
          Alert.show(resourceManager.getString("gcc", "persons.not.down"), Constants.APP_NAME, Alert.OK, null, null, Constants.ICON32_WARNING);
          return;
        }
        init();
      }

      private function onComboBoxCreateComplete(e:Event):void
      {
        if (e.currentTarget is ComboBox)
        {
          var cbox:ComboBox=e.currentTarget as ComboBox;
          if (cbox.listData is AdvancedDataGridListData && cbox.data is Person)
          {
            var listData:AdvancedDataGridListData=cbox.listData as AdvancedDataGridListData;
            var dataField:String=listData.dataField
            var list:Object=lists.hasOwnProperty(dataField) ? lists[dataField] : null;
            var p:Person=cbox.data as Person;
            cbox.dataProvider=list;
            cbox.selectedIndex=(list != null) ? CommonUtil.indexOfKey(list, p[dataField], "label") : -1;
          }
        }
      }

      private function close(e:Event=null):void
      {
        dispatchEvent(CommonEvent.CLOSE_EVENT);
      }

      private function update(e:Event):void
      {
        if (CommonUtil.validateGrid(adg, ["name", "workerId", {field:"pid", validator:Constants.VALIDATOR_IDCARD}, "onDate", "type"], 
          function(item:Object):void
          {
            if (item is Person) (item as Person).lastModifier=UserController.person;
          }).length > 0)
          return;
        PersonalController.updatePersonsInfo(CommonUtil.getGridList(adg).toArray(), function(e1:ResultEvent):void
          {
            Alert.show(resourceManager.getString("gcc", "save.success"), Constants.APP_NAME, Alert.OK, null, function(e2:Event):void
              {
                for (var i:int=0; i < list0.length; i++)
                {
                  CommonUtil.copyProperties(list1[i], list0[i]);
                }
                close();
              // owner.dispatchEvent(CommonEvent.REFRESH_EVENT);
              }, Constants.ICON32_INFO);
          });
      }
    ]]>
  </mx:Script>
</mx:TitleWindow>
