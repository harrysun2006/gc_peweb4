<?xml version="1.0" encoding="utf-8"?>
<mx:AdvancedDataGrid xmlns:mx="http://www.adobe.com/2006/mxml" labelFunction="{CommonUtil.gridLabelFunction}"
					 preinitialize="onPreinitialize()" creationComplete="onCreationComplete()" sortableColumns="false"
			 		 horizontalScrollPolicy="auto" verticalScrollPolicy="auto" editable="true"
			 		 itemEditEnd="onItemEditEnd(event)" dataProvider="{adgAC}"
					 height="100%">
	<mx:groupedColumns>
		<mx:AdvancedDataGridColumn dataField="id" dataTipField="id.no" color="0x0000FF" backgroundColor="0xD8D8D8" fontWeight="bold"
								   editable="false" labelFunction="{CommonUtil.serialLabelFunction}" textAlign="center"/>
		<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.id.refNo" editorDataField="selectedItem"
								   itemEditor="{guaComboBox}"/>
		<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.appDate"/>
		<mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
										headerText="{resourceManager.getString('gcc_safety', 'claims.accident.head')}"
										textAlign="left" editable="false">
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.no"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.fkGuaReport.reportNo"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.dept.name"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.bus.authNo"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.date"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.address"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.driver.workerId"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.driver.name"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.accident.driver.cert1No"/>
		</mx:AdvancedDataGridColumnGroup>
		<mx:AdvancedDataGridColumnGroup headerRenderer="{header}"
										headerText="{resourceManager.getString('gcc_safety', 'claims.accident.inpsngua.head')}"
										textAlign="left" editable="false">
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.fkAccInPsn.id.no" formatter="{Constants.NUMBER_FORMATTER_N0}"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.fkAccInPsn.name"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.fkAccInPsn.mediFee"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.fkAccInPsn.other1"/>
			<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.fkAccInPsn.other2"/>
		</mx:AdvancedDataGridColumnGroup>
		<mx:AdvancedDataGridColumn dataField="fkAccInPsnGua" dataTipField="fkAccInPsnGua.mediFee" width="80"/>
		<mx:AdvancedDataGridColumn dataField="mediFee" itemEditor="{textInput}" width="80"/>
		<mx:AdvancedDataGridColumn width="1"/>
	</mx:groupedColumns>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.TextInput;
			import mx.events.ListEvent;
			import mx.events.DropdownEvent;
			import mx.events.FlexEvent;
			import mx.events.AdvancedDataGridEventReason;
			import mx.events.AdvancedDataGridEvent;

			import mx.managers.PopUpManager;
			import mx.controls.ComboBox;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.rpc.events.ResultEvent;
			import mx.collections.ArrayCollection;
			
			import com.gc.Constants;
			import com.gc.util.CommonUtil;
			import com.gc.controls.AdvancedClassFactory;
			import com.gc.controls.advancedDataGridClasses.SuperDataGridHeaderRenderer;
			import com.gc.safety.model.AccInPsnGuaPay;
			import com.gc.safety.model.AccInPsnPay;
			import com.gc.safety.model.AccInPsnGua;
			import com.gc.safety.model.Insurer;
			import com.gc.safety.controller.ClaimsController;
			[Bindable]
			public var adgAC:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var accidentList2DP:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var header:AdvancedClassFactory;
			[Bindable]
			private var guaComboBox:AdvancedClassFactory;
			[Bindable]
			private var textInput:AdvancedClassFactory;
			
			private var fields:Array;
			private var guaInList:GuaInList;
			private var refNo:String;		// 记录datagird里combobox修改时的值,itemeditend用
			
			
			private function onPreinitialize():void
			{
				fields = ["fkAccInPsnGua.id.refNo", "mediFee"];
				CommonUtil.setDataGridColumns(this, "gcc_safety", "accinpsnguapay", function(obj:Object):void
						{
							if (obj is AdvancedDataGridColumn)
							{
								var column:AdvancedDataGridColumn = obj as AdvancedDataGridColumn;
								column.editable = (column.dataTipField != null) ? fields.indexOf(column.dataTipField) >= 0 : fields.indexOf(column.dataField) >= 0;
							}
						});
				header = new AdvancedClassFactory(SuperDataGridHeaderRenderer);
				guaComboBox = new AdvancedClassFactory(ComboBox);
				guaComboBox.properties = {editable: true, dataProvider: accidentList2DP, dropdownWidth: 0, labelFunction: setGuaComboBoxLabel};
				guaComboBox.listeners = [{type: FlexEvent.CREATION_COMPLETE, listener: onGuaComboBoxCreated}, 
											  {type: DropdownEvent.OPEN, listener: onGuaComboBoxOpen},
											  {type: KeyboardEvent.KEY_UP, listener: onGuaComboBoxKey},
											  {type: ListEvent.CHANGE, listener: onAcc1AccEdit},
											  {type: FocusEvent.FOCUS_OUT, listener: onAdg1AccFocusOut}
											];
				textInput = new AdvancedClassFactory(TextInput);
				textInput.properties = {restrict: "0-9\."};
			}
			
			private function onCreationComplete():void
			{
				percentWidth = 100;
			}
			
			private function onItemEditEnd(event:AdvancedDataGridEvent):void
	      	{
	      		if (event.itemRenderer && event.reason != AdvancedDataGridEventReason.CANCELLED)
		        {
		          	var adg:AdvancedDataGrid=event.currentTarget as AdvancedDataGrid;
		          	var column:AdvancedDataGridColumn=adg.columns[event.columnIndex];
		          	var newData:Object=adg.itemEditorInstance[column.editorDataField];
		          	var property:String=column.dataField;
		          	var data:Object=event.itemRenderer.data;
		          	// var clazz:Class=CommonUtil.getClass(data, property);
		          	try
		          	{
		            	data[property]=newData;
		          	}
		          	catch (error:Error)
		          	{
		            	event.reason = AdvancedDataGridEventReason.CANCELLED;
		          	}
		        }
	      	}
	      	
	      	/** 查询客伤理赔凭证 */
	      	public function getAccInGua(branchId:int, insurer:Insurer):void
	      	{
	      		ClaimsController.getAccInPsnGua(branchId, insurer, onGetAccInGuaSuccess);
	      	}
	      	
	      	private function onGetAccInGuaSuccess(e:ResultEvent):void
	      	{
	      		accidentList2DP.removeAll();
	      		var re:ArrayCollection = e.result as ArrayCollection;
	      		for each (var accInPsnGua:AccInPsnGua in re)
	      		{
	      			var mediFee:Number = 0;
	      			var other1:Number = 0;
	      			var other2:Number = 0;
	      			for each (var accInPsnPay:AccInPsnPay in accInPsnGua.fkAccInPsn.accInPsnPays)
	      			{
	      				mediFee += accInPsnPay.mediFee;
	      				other1 += accInPsnPay.other1;
	      				other2 += accInPsnPay.other2;
	      			}
	      			accInPsnGua.fkAccInPsn.mediFee = mediFee;
	      			accInPsnGua.fkAccInPsn.other1 = other1;
	      			accInPsnGua.fkAccInPsn.other2 = other2;
	      			var obj:Object = new Object();
	      			obj.fkAccInPsnGua = accInPsnGua;
	      			accidentList2DP.addItem(obj);
	      		}
	      		//由于理赔和赔付时一一对应，所以修改的时候下拉列表里不会有相同的理赔凭证，所以不用匹配
//	      		for each(var aog:Object in adgAC)
//						{
//							for each(var adp:Object in accidentList2DP)
//							{
//								if(aog["fkAccInPsnGua"].id.no== adp["fkAccInPsnGua"].id.no && aog["fkAccInPsnGua"].id.refNo== adp["fkAccInPsnGua"].id.refNo)
//									aog["fkAccInPsnGua"]=adp["fkAccInPsnGua"];
//							}
//						}
	      	}
			
			
			/** 绑定事故下拉列表与DG值 */
			private function onGuaComboBoxCreated(e:FlexEvent):void
			{
				if (e.currentTarget is ComboBox)
				{
					e.currentTarget.selectedIndex = CommonUtil.indexOfKey(accidentList2DP.toArray(), 
								e.currentTarget.data["fkAccInPsnGua"], "fkAccInPsnGua");
				}
			}
			
			/** 事故下拉框打开 */
			private function onGuaComboBoxOpen(e:DropdownEvent):void
			{
				if (guaInList != null) return;
				guaInList = GuaInList(PopUpManager.createPopUp(this, GuaInList, false));
				guaInList.adg.dataProvider = accidentList2DP;
				guaInList.x = e.currentTarget.dropdown.x;
				guaInList.y = e.currentTarget.dropdown.y;
				guaInList.adg.addEventListener(MouseEvent.CLICK, onAccList1ClickHandler);
			}
			
			/** 客伤理赔凭证下拉框选择 */
			private function onAccList1ClickHandler(e:MouseEvent):void
			{
				if (selectedItem != null)
				{
					fulfillADG2(selectedItem as AccInPsnGuaPay, guaInList.adg.selectedItem);
					closeGuaIn();
				}
			}
			
			/**
			 * 填充客伤理赔凭证
			 * @parm	dest 	填充目标对象,if null, 填充所有
			 * @parm	source 	填充源对象, if null, 填充所有	
			 */
			public function fulfillADG2(dest:AccInPsnGuaPay=null, source:Object=null):void
			{
				// id.no, insurer, appdate, apppsn, appdesc在保存时统一填充;
				// 因为目前提交保险公司理赔只有一个金额,所以用医药费保存金额汇总,补偿费和误工费隐藏
				if (dest != null && source != null)
				{
					dest.fkAccInPsnGua = source.hasOwnProperty("fkAccInPsnGua") ? source.fkAccInPsnGua : null;
					dest.mediFee = (dest.fkAccInPsnGua != null) ? dest.fkAccInPsnGua.mediFee : 0;
				} 
				else if (dest == null && source == null) 
				{
					adgAC.removeAll();
					for each (var obj:Object in accidentList2DP)
					{
						var accInPsnGuaPay:AccInPsnGuaPay = new AccInPsnGuaPay();
						accInPsnGuaPay.fkAccInPsnGua = obj.hasOwnProperty("fkAccInPsnGua") ? obj.fkAccInPsnGua : null;
						accInPsnGuaPay.mediFee = (accInPsnGuaPay.fkAccInPsnGua != null) ? accInPsnGuaPay.fkAccInPsnGua.mediFee + 
										accInPsnGuaPay.fkAccInPsnGua.other1 + accInPsnGuaPay.fkAccInPsnGua.other2 : 0;
						adgAC.addItem(accInPsnGuaPay);
					}
				}
			}
			
			/** 事故编号下拉时按Esc关闭选择列表 */
			private function onGuaComboBoxKey(e:KeyboardEvent):void
			{
				if (e.keyCode == Keyboard.ESCAPE && guaInList != null)
				{
					closeGuaIn();
				}
			}
			
			
			/** 事故编号可输入,编辑完后验证编号是否有效 */
			private function onAcc1AccEdit(e:ListEvent):void
			{
				refNo = (e.currentTarget as ComboBox).text;
				var newAC:ArrayCollection = new ArrayCollection();
				if (guaInList != null)
				{
					for each (var obj:Object in accidentList2DP)
					{
						if (obj.hasOwnProperty("fkAccInPsnGua"))
						{
							if ((obj.fkAccInPsnGua.id.refNo as String).search(refNo) >= 0)
								newAC.addItem(obj);
						}
					}
					guaInList.adg.dataProvider = newAC;
				}
				else
				{
					// 未弹出框, 是否可以在onItemEditEnd()中处理
					(e.currentTarget as ComboBox).open();
				}
			}
			
			/** 下拉列表移出光标后移除下拉明细窗口 */
			private function onAdg1AccFocusOut(e:FocusEvent):void
			{
				if (guaInList == null) return;
				if (focusManager.getFocus() != guaInList.adg)
					closeGuaIn();
			}
			
			/** 关闭三责理赔凭证选择列表 */
			private function closeGuaIn():void
			{
				guaInList.adg.dataProvider = null;
				PopUpManager.removePopUp(guaInList);
				guaInList = null;
			}
			
			private function setGuaComboBoxLabel(item:Object):String
			{
				if(item == "" || item == null)
					return "";
				return item.fkAccInPsnGua.id.refNo;
			}
		]]>
	</mx:Script>
</mx:AdvancedDataGrid>
