<?xml version="1.0" encoding="utf-8"?>
<mx:AdvancedDataGrid xmlns:mx="http://www.adobe.com/2006/mxml" labelFunction="{CommonUtil.gridLabelFunction}" dataProvider="{adgAC}"
					 sortableColumns="false" editable="true" preinitialize="onPreinitialize()" creationComplete="onCreationComplete()"
					 itemEditEnd="onItemEditEnd(event)" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
	<mx:groupedColumns>
		<mx:AdvancedDataGridColumn dataField="id" dataTipField="id.no" labelFunction="{CommonUtil.serialLabelFunction}" 
								   color="0x0000FF" backgroundColor="0xD8D8D8" fontWeight="bold" editable="false" textAlign="center"/>
		<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.id.refNo" editorDataField="selectedItem"
								   itemEditor="{guaComboBox}"/>
		<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.appDate"/>
		<mx:AdvancedDataGridColumnGroup headerRenderer="{header}" textAlign="left" editable="false"
										headerText="{resourceManager.getString('gcc_safety', 'claims.accident.head')}">
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.no"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.fkGuaReport.reportNo"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.dept.name"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.bus.authNo"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.date"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.address"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.driver.workerId"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.driver.name"/>
			<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.accident.driver.cert1No"/>
		</mx:AdvancedDataGridColumnGroup>
		<mx:AdvancedDataGridColumnGroup headerRenderer="{header}" textAlign="left" editable="false"
										headerText="{resourceManager.getString('gcc_safety', 'claims.accident.pay.head')}">
			<mx:AdvancedDataGridColumn dataField="payObjSum"/>
			<mx:AdvancedDataGridColumn dataField="payMediFee"/>
			<mx:AdvancedDataGridColumn dataField="payOther1"/>
			<mx:AdvancedDataGridColumn dataField="payOther2"/>
		</mx:AdvancedDataGridColumnGroup>
		<mx:AdvancedDataGridColumn dataField="fkAccOutGua" dataTipField="fkAccOutGua.objSum" width="80"/>
		<mx:AdvancedDataGridColumn dataField="objSum" itemEditor="{textInput}" width="80"/>
		<mx:AdvancedDataGridColumn width="1"/>
	</mx:groupedColumns>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.TextInput;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.events.ListEvent;
			import mx.events.FlexEvent;
			import mx.events.DropdownEvent;
			import mx.events.AdvancedDataGridEvent;
			import mx.events.AdvancedDataGridEventReason;
			import mx.controls.ComboBox;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.collections.ArrayCollection;
			
			import com.gc.util.CommonUtil;
			import com.gc.safety.model.Insurer;
			import com.gc.safety.model.AccOutGua;
			import com.gc.safety.model.AccOutGuaPay;
			import com.gc.safety.controller.ClaimsController;
			import com.gc.controls.AdvancedClassFactory;
			import com.gc.controls.advancedDataGridClasses.SuperDataGridHeaderRenderer;
			
			[Bindable]
			public var adgAC:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var accidentList1DP:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var header:AdvancedClassFactory;
			[Bindable]
			private var guaComboBox:AdvancedClassFactory;
			[Bindable]
			private var textInput:AdvancedClassFactory;
			
			private var guaOutList:GuaOutList;
			private var fields:Array;
			private var refNo:String;		// 记录datagird里combobox修改时的值,itemeditend用
			
			private function onPreinitialize():void
			{
				fields = ["fkAccOutGua.id.refNo", "objSum"];
				CommonUtil.setDataGridColumns(this, "gcc_safety", "accoutguapay", function(obj:Object):void
					{
						if (obj is AdvancedDataGridColumn)
							{
								var column:AdvancedDataGridColumn = obj as AdvancedDataGridColumn;
								column.editable = (column.dataTipField != null) ? fields.indexOf(column.dataTipField) >= 0 : fields.indexOf(column.dataField) >= 0;
							}
					});
				header = new AdvancedClassFactory(SuperDataGridHeaderRenderer);
				guaComboBox = new AdvancedClassFactory(ComboBox);
				guaComboBox.properties = {editable: true, dataProvider: accidentList1DP, dropdownWidth: 0, labelFunction: setGuaComboBoxLabel};
				guaComboBox.listeners = [{type: FlexEvent.CREATION_COMPLETE, listener: onGuaComboBoxCreated}, 
											  {type: DropdownEvent.OPEN, listener: onGuaComboBoxOpen},
											  {type: KeyboardEvent.KEY_UP, listener: onGuaComboBoxKey},
											  {type: ListEvent.CHANGE, listener: onAcc1AccEdit},
											  {type: FocusEvent.FOCUS_OUT, listener: onAdg1AccFocusOut}
											];
				textInput = new AdvancedClassFactory(TextInput);
				textInput.properties = {restrict: "0-9\."};
			}
			
			private function onCreationComplete():void
			{
				percentWidth = 100;
			}
			
			private function onItemEditEnd(event:AdvancedDataGridEvent):void
			{
				if (event.itemRenderer && event.reason != AdvancedDataGridEventReason.CANCELLED)
		        {
		          	var adg:AdvancedDataGrid=event.currentTarget as AdvancedDataGrid;
		          	var column:AdvancedDataGridColumn=adg.columns[event.columnIndex];
		          	var newData:Object=adg.itemEditorInstance[column.editorDataField];
		          	var property:String=column.dataField;
		          	var data:Object=event.itemRenderer.data;
		          	try
		          	{
		            	data[property]=newData;
		          	}
		          	catch (error:Error)
		          	{
		            	event.reason = AdvancedDataGridEventReason.CANCELLED;
		          	}
		        }
			}
			
			/** 查询三责理赔凭证 */
			public function getAccOutGua(branchId:int, insurer:Insurer):void
			{
				ClaimsController.getAccOutGua(branchId, insurer, onGetAccOutGuaSuccess);
			}
			
			public function onGetAccOutGuaSuccess(e:ResultEvent):void
			{
				accidentList1DP.removeAll();
				var re:ArrayCollection = e.result as ArrayCollection;
				for each (var obj:ArrayCollection in re)
				{
					var unit:Object = new Object();
					unit.fkAccOutGua = obj[0];
					unit.fkGuaReport = obj[0].fkGuaReport;
					unit.payObjSum = obj[1];
					unit.payMediFee = obj[2];
					unit.payOther1 = obj[3];
					unit.payOther2 = obj[4];
					accidentList1DP.addItem(unit);
				}
//				for each(var aog:Object in adgAC)
//				{
//					for each(var adp:Object in accidentList1DP)
//					{
//						if(aog["fkAccOutGua"].id.no== adp["fkAccOutGua"].id.no && aog["fkAccOutGua"].id.refNo== adp["fkAccOutGua"].id.refNo)
//							aog["fkAccOutGua"]=adp["fkAccOutGua"];
//					}
//				}
			}
			
			/** 绑定事故下拉列表与DG值 */
			private function onGuaComboBoxCreated(e:FlexEvent):void
			{
				if (e.currentTarget is ComboBox)
				{
					e.currentTarget.selectedIndex = CommonUtil.indexOfKey(accidentList1DP.toArray(), 
								e.currentTarget.data["fkAccOutGua"], "fkAccOutGua");
				}
			}
			
			/** 事故下拉框打开 */
			private function onGuaComboBoxOpen(e:DropdownEvent):void
			{
				if (guaOutList != null) return;
				guaOutList = GuaOutList(PopUpManager.createPopUp(this, GuaOutList, false));
				guaOutList.adg.dataProvider = accidentList1DP;
				guaOutList.x = e.currentTarget.dropdown.x;
				guaOutList.y = e.currentTarget.dropdown.y;
				guaOutList.adg.addEventListener(MouseEvent.CLICK, onAccList1ClickHandler);
			}
			
			/** 三责理赔凭证下拉框选择 */
			private function onAccList1ClickHandler(e:MouseEvent):void
			{
				if (selectedItem != null)
				{
					fulfillADG1(selectedItem as AccOutGuaPay, guaOutList.adg.selectedItem);
					closeGuaOut();
				}
			}
			
			/**
			 * 填充三责理赔凭证
			 * @parm	dest 	填充目标对象,if null, 填充所有
			 * @parm	source 	填充源对象, if null, 填充所有
			 */
			public function fulfillADG1(dest:AccOutGuaPay=null, source:Object=null):void
			{
				var mediFee:Number = 0;
				var other1:Number = 0;
				var other2:Number = 0;
				var objSum:Number = 0;
				if (dest == null && source == null)
				{
					adgAC.removeAll();
					for each (var obj:Object in accidentList1DP)
					{
						var accOutGuaPay:AccOutGuaPay = new AccOutGuaPay();
						accOutGuaPay.fkGuaReport = obj.hasOwnProperty("fkGuaReport") ? obj.fkGuaReport : null;
						accOutGuaPay.fkAccOutGua = obj.hasOwnProperty("fkAccOutGua") ? obj.fkAccOutGua : null;
						mediFee = obj.hasOwnProperty("payMediFee") ? obj.payMediFee : 0;
						other1 = obj.hasOwnProperty("payOther1") ? obj.payOther1 : 0;
						other2 = obj.hasOwnProperty("payOther2") ? obj.payOther2 : 0;
						objSum = obj.hasOwnProperty("payObjSum") ? obj.payObjSum : 0;
						accOutGuaPay.objSum = accOutGuaPay.fkAccOutGua.objSum;
						accOutGuaPay.payOther1 = other1;
						accOutGuaPay.payOther2 = other2;
						accOutGuaPay.payMediFee = mediFee;
						accOutGuaPay.payObjSum = objSum;
						adgAC.addItem(accOutGuaPay);
					}
				}
				else if (dest != null && source != null)
				{
					dest.fkGuaReport = source.hasOwnProperty("fkGuaReport") ? source.fkGuaReport : null;
					dest.fkAccOutGua = source.hasOwnProperty("fkAccOutGua") ? source.fkAccOutGua : null;
					mediFee = source.hasOwnProperty("payMediFee") ? source.payMediFee : 0;
					other1 = source.hasOwnProperty("payOther1") ? source.payOther1 : 0;
					other2 = source.hasOwnProperty("payOther2") ? source.payOther2 : 0;
					objSum = source.hasOwnProperty("payObjSum") ? source.payObjSum : 0;
					dest.payObjSum = objSum;
					dest.payMediFee = mediFee;
					dest.payOther1 = other1;
					dest.payOther2 = other2;
					dest.objSum = dest.payObjSum + dest.payMediFee + dest.payOther1 + dest.payOther2;
				}
			}
			
			/** 事故编号下拉时按Esc关闭选择列表 */
			private function onGuaComboBoxKey(e:KeyboardEvent):void
			{
				if (e.keyCode == Keyboard.ESCAPE && guaOutList != null)
				{
					closeGuaOut();
				}
			}
			
			/** 事故编号可输入,编辑完后验证编号是否有效 */
			private function onAcc1AccEdit(e:ListEvent):void
			{
				refNo = (e.currentTarget as ComboBox).text;
				var newAC:ArrayCollection = new ArrayCollection();
				if (guaOutList != null)
				{
					for each (var obj:Object in accidentList1DP)
					{
						if (obj.hasOwnProperty("fkAccOutGua"))
						{
							if ((obj.fkAccOutGua.id.refNo as String).search(refNo) >= 0)
								newAC.addItem(obj);
						}
					}
					guaOutList.adg.dataProvider = newAC;
				}
				else
				{
					// 未弹出框, 是否可以在onItemEditEnd()中处理
					(e.currentTarget as ComboBox).open();
				}
			}
			
			/** 下拉列表移出光标后移除下拉明细窗口 */
			private function onAdg1AccFocusOut(e:FocusEvent):void
			{
				if (guaOutList == null) return;
				if (focusManager.getFocus() != guaOutList.adg)
					closeGuaOut();
			}
			
			/** 关闭三责理赔凭证选择列表 */
			private function closeGuaOut():void
			{
				guaOutList.adg.dataProvider = null;
				PopUpManager.removePopUp(guaOutList);
				guaOutList = null;
			}
			
			private function setGuaComboBoxLabel(item:Object):String
			{
				if(item == "" || item == null)
				return "";
				return item.fkAccOutGua.id.refNo;
			}
			
		]]>
	</mx:Script>
</mx:AdvancedDataGrid>
