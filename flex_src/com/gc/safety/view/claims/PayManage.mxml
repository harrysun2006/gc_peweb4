<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:claims="com.gc.safety.view.claims.*"
         preinitialize="onPreinitialize()" creationComplete="onCreationComplete()"
         horizontalAlign="center" width="100%" height="100%">
  <mx:Label id="lTitle" textAlign="center" width="100%" fontSize="16" fontWeight="bold"/>
  <mx:VBox horizontalAlign="center" width="100%">
    <mx:Canvas width="1024" height="50">
      <mx:HBox width="100%">
        <mx:Label text="{resourceManager.getString('gcc_safety', 'refNo')}" width="70"/>
        <mx:TextInput id="tiAccno" editable="false" width="110"/>
        <mx:HBox horizontalAlign="right" width="100%">
          <mx:Label text="{resourceManager.getString('gcc_safety', 'claims.date')}" width="70"/>
          <mx:DateField id="df" formatString="{Constants.DATE_FORMAT}" enabled="false" width="110"/>
        </mx:HBox>
      </mx:HBox>
    </mx:Canvas>
  </mx:VBox>
  <mx:VBox horizontalAlign="center" width="100%">
    <mx:Canvas width="1024" height="400">
      <mx:VBox width="100%" height="100%">
        <mx:HBox width="100%">
          <mx:Label text="{resourceManager.getString('gcc_safety', 'insurer.name')}"/>
          <mx:ComboBox id="cbInsurer" dataProvider="{GuaranteeController.insurerList}"
                       labelField="name" enabled="false" width="180"/>
          <mx:HBox horizontalAlign="right" width="100%">
            <mx:Label text="{resourceManager.getString('gcc_safety', 'claims.type')}" width="70"
                      x="700"/>
            <mx:ComboBox id="cbGuaType" dataProvider="{type}" labelField="name" enabled="false"
                         width="110"/>
          </mx:HBox>
        </mx:HBox>
        <mx:Canvas width="100%" height="100%">
          <claims:AccOutPayADG id="adg1" dataProvider="{adg1AC}" height="100%"/>
          <claims:AccInPayADG id="adg2" dataProvider="{adg2AC}" height="100%"/>
        </mx:Canvas>
      </mx:VBox>
    </mx:Canvas>
  </mx:VBox>
  <mx:Canvas width="1024" height="50">
    <mx:HBox width="100%">
      <mx:Label text="{resourceManager.getString('gcc_safety', 'claims.pay.desc')}" width="70"/>
      <mx:TextArea id="taDesc" width="100%"/>
    </mx:HBox>
  </mx:Canvas>
  <mx:HBox horizontalAlign="center" width="100%">
    <mx:Button label="{resourceManager.getString('gcc_safety', 'get')}" click="onGetClickHandler()"/>
    <mx:Button label="{resourceManager.getString('gcc', 'add')}" click="onAddClickHandler()"/>
    <mx:Button label="{resourceManager.getString('gcc', 'delete')}" click="onDelClickHandler()"/>
    <mx:Button label="{resourceManager.getString('gcc', 'reset')}" click="onResetClickHandler()"/>
    <mx:Button label="{resourceManager.getString('gcc_safety', 'export')}"
               click="onExportClickHandler()" enabled="false"/>
    <mx:Button label="{resourceManager.getString('gcc_safety', 'print')}"
               click="onPrintClickHandler()" enabled="false"/>
    <mx:Button label="{resourceManager.getString('gcc', 'save')}" click="onSaveClickHandler()"/>
    <mx:Button label="{resourceManager.getString('gcc', 'close')}" click="onCloseClickHandler()"/>
  </mx:HBox>

  <mx:Script>
    <![CDATA[
      import mx.rpc.events.ResultEvent;
      import mx.controls.Alert;
      import mx.managers.PopUpManager;
      import mx.managers.ToolTipManager;
      import mx.controls.ToolTip;
      import mx.utils.ObjectUtil;
      import mx.events.CloseEvent;
      import mx.collections.ArrayCollection;

      import com.gc.util.CommonUtil;
      import com.gc.CommonEvent;
      import com.gc.common.controller.UserController;
      import com.gc.safety.model.AccInPsnGuaPay;
      import com.gc.safety.model.AccOutGuaPay;
      import com.gc.safety.model.Insurer;
      import com.gc.safety.controller.ClaimsController;
      import com.gc.safety.controller.GuaranteeController;
      import com.gc.Constants;

      [Bindable]
      private var type:Array;
      [Bindable]
      private var adg1AC:ArrayCollection=new ArrayCollection(); // 非客伤ADG dataprovider
      [Bindable]
      private var adg2AC:ArrayCollection=new ArrayCollection(); // 客伤ADG dataprovider
      private var oldAC:ArrayCollection = new ArrayCollection();

      private var newWin:PayNewWin;
      private var modifyWin:PayModifyWin;
      private var bol:Boolean = false; //标记保存后是否关闭主页面

      private function onPreinitialize():void
      {
        type = [resourceManager.getString('gcc', 'claims.type.out'),
          resourceManager.getString('gcc', 'claims.type.in')];
        addEventListener(CommonEvent.CREATED, function(e:CommonEvent):void
          {
            GuaranteeController.preloadLists(UserController.branchId, ["insurerList"]);
            adg1AC.removeAll();
            adg2AC.removeAll();
            oldAC.removeAll();
            cbInsurer.selectedIndex = -1;
            cbGuaType.selectedIndex = -1;
            tiAccno.text = "";
            df.text = "";
            if (e.args[0] == 0)
            {
//              modify = false;
              lTitle.text = resourceManager.getString('gcc_safety', 'claims.pay.new');
              popNewWin();
            }
            else
            {
//              modify = true;
              lTitle.text = resourceManager.getString('gcc_safety', 'claims.pay.modify');
              popModifyWin();
            }
          });
      }

      private function onCreationComplete():void
      {
        adg1AC = adg1.adgAC; // 引用三责理赔的DataProvider
        adg2AC = adg2.adgAC; // 引用客伤理赔的DataProvider
      }

      private function popNewWin():void
      {
        newWin = PayNewWin(PopUpManager.createPopUp(this, PayNewWin, true));
        newWin.cbType.dataProvider = type;
        newWin.confirmBtn.addEventListener(MouseEvent.CLICK, onNewWinConfirmHandler);
        newWin.cancelBtn.addEventListener(MouseEvent.CLICK, onNewWinCancelHandler);
        newWin.addEventListener(CloseEvent.CLOSE, onNewWinCancelHandler);
        newWin.cbInsurer.selectedIndex = -1;
        newWin.cbType.selectedIndex = -1;
        PopUpManager.centerPopUp(newWin);
      }

      private function onNewWinConfirmHandler(e:MouseEvent):void
      {
        if (!CommonUtil.validateForm(newWin.vbox, [{field: "df", error: resourceManager.getString('gcc_safety', 'claims.new.condition.date.null')}, 
          {field: "cbInsurer", error: resourceManager.getString('gcc_safety', 'claims.new.condition.insurer.null')}, 
          {field: "cbType", error: resourceManager.getString('gcc_safety', 'claims.new.condition.guaType.null')}]))
          return;
        PopUpManager.removePopUp(newWin);
        df.text = newWin.df.text;
        // 选择的是客伤险 ，id=1是客伤险的关键字
        adg1.visible = ((newWin.cbType.selectedItem as String) == type[0]) ? true : false;
        adg2.visible = ((newWin.cbType.selectedItem as String) == type[0]) ? false : true;
        cbGuaType.selectedIndex = newWin.cbType.selectedIndex;
        cbInsurer.selectedIndex = newWin.cbInsurer.selectedIndex;

        var insurer:Insurer = cbInsurer.selectedItem as Insurer;
        if (adg2.visible)
          adg2.getAccInGua(UserController.branchId, insurer);
        else
          adg1.getAccOutGua(UserController.branchId, insurer);
        oldAC = ObjectUtil.copy((adg1.visible) ? adg1AC : adg2AC) as ArrayCollection;
      }

      private function onNewWinCancelHandler(e:Event):void
      {
        PopUpManager.removePopUp(newWin);
        parent.dispatchEvent(CommonEvent.CLOSE_EVENT);
      }

      private function popModifyWin():void
      {
        modifyWin = PayModifyWin(PopUpManager.createPopUp(this, PayModifyWin, true));
        modifyWin.confirmBtn.addEventListener(MouseEvent.CLICK, onModifyWinConfirmHandler);
        modifyWin.cancelBtn.addEventListener(MouseEvent.CLICK, onModifyWinCancelHandler);
        modifyWin.addEventListener(CloseEvent.CLOSE, onModifyWinCancelHandler);
        PopUpManager.centerPopUp(modifyWin);
        modifyWin.tiRefNo.setFocus();
      }

      private function onModifyWinConfirmHandler(e:MouseEvent):void
      {
        // validate
        if (!CommonUtil.validateForm(modifyWin, [{field: "tiRefNo", 
            error: resourceManager.getString("gcc_safety", "claims.modify.condition.refNo.null")}]))
          return;
        var refNo:String = modifyWin.tiRefNo.text;
        var idx:int = CommonUtil.indexOfKey(modifyWin.adgAC, refNo, "refNo")
        if (idx == -1)
        {
//          var p:Point = modifyWin.tiRefNo.localToGlobal(new Point(modifyWin.tiRefNo.length, 0));
//          var err:String = resourceManager.getString('gcc_safety', 'claims.refNo.error');
//          var errTip:ToolTip = ToolTipManager.createToolTip(err, p.x, p.y) as ToolTip;
//          errTip.x += modifyWin.tiRefNo.width;
//          errTip.setStyle("styleName", "errorTip");
//          modifyWin.tiRefNo.setFocus();
//          flash.utils.setTimeout(ToolTipManager.destroyToolTip, 2000, errTip);
          CommonUtil.showError(modifyWin.tiRefNo,2000,resourceManager.getString('gcc_safety', 'claims.refNo.error'));
          return;
        }
        else
        {
          var vo:Object = modifyWin.adgAC.getItemAt(idx, 0);
          modifyWin.type = vo.hasOwnProperty("type") ? vo.type : null;
        }
        // fulfill
        adg1.visible = (modifyWin.type == type[0]) ? true : false;
        adg2.visible = (modifyWin.type == type[0]) ? false : true;
        cbGuaType.selectedIndex = (modifyWin.type == type[0]) ? 0 : 1;
        cbInsurer.selectedIndex = CommonUtil.indexOfObject(GuaranteeController.insurerList, modifyWin.insurer);
        tiAccno.text = refNo;
        df.text = DateField.dateToString(modifyWin.appDate, Constants.DATE_FORMAT);

        for each (var item:Array in modifyWin.modiAC)
        {
          if (item[2] == refNo)
          {
            if (adg1.visible)
            {
              adg1AC.addItem(item[0]);
            }
            else
            {
              adg2AC.addItem(item[0]);
            }
          }
        }
        oldAC = ObjectUtil.copy((adg1.visible) ? adg1AC : adg2AC) as ArrayCollection;
//				CommonUtil.copyProperties((adg1.visible) ? adg1AC : adg2AC, oldAC);

        if (adg2.visible)
          adg2.getAccInGua(UserController.branchId, modifyWin.insurer);
        else
          adg1.getAccOutGua(UserController.branchId, modifyWin.insurer);
        PopUpManager.removePopUp(modifyWin);
      }

      private function onModifyWinCancelHandler(e:Event):void
      {
        modifyWin.removeAllChildren();
        PopUpManager.removePopUp(modifyWin);
        parent.dispatchEvent(CommonEvent.CLOSE_EVENT);
      }

      private function onGetClickHandler():void
      {
        if (adg2.visible)
        {
          adg2.fulfillADG2();
        }
        else if (adg1.visible)
        {
          adg1.fulfillADG1();
        }
      }

      private function onAddClickHandler():void
      {
        if (adg2.visible)
        {
          var accInPsnGuaPay:AccInPsnGuaPay = new AccInPsnGuaPay();
          accInPsnGuaPay.mediFee = accInPsnGuaPay.other1 = accInPsnGuaPay.other2 = 0;
          adg2AC.addItem(accInPsnGuaPay);
        }
        else if (adg1.visible)
        {
          var accOutGuaPay:AccOutGuaPay = new AccOutGuaPay();
          accOutGuaPay.objSum = accOutGuaPay.paySum = 0;
          adg1AC.addItem(accOutGuaPay);
        }
      }

      private function onDelClickHandler():void
      {
        if (adg2.visible)
        {
          if (adg2.selectedIndex < 0)
            Alert.show(resourceManager.getString('gcc', 'delete.not.null'),Constants.APP_NAME, Alert.OK,
              null, null, Constants.ICON32_WARNING);
          else
            adg2AC.removeItemAt(adg2.selectedIndex);
        }
        else if (adg1.visible)
        {
          if (adg1.selectedIndex < 0)
            Alert.show(resourceManager.getString('gcc', 'delete.not.null'),Constants.APP_NAME, Alert.OK,
              null, null, Constants.ICON32_WARNING);
          else
            adg1AC.removeItemAt(adg1.selectedIndex);
        }
      }

      private function onResetClickHandler():void
      {
        if (adg2.visible)
          adg2AC.removeAll();
        else if (adg1.visible)
          adg1AC.removeAll();
      }

      private function onExportClickHandler():void
      {

      }

      private function onPrintClickHandler():void
      {

      }

      private function onSaveClickHandler():void
      {
        var obj:Object;
        var desc:String = taDesc.text;
        if (adg1.visible)
        {
          if (CommonUtil.validateGrid(adg1, ["fkAccOutGua.id.refNo", "objSum"]).length > 0)
          {
            bol = false;
            return;
          }
          for each (obj in adg1AC)
          {
            var accOutGuaPay:AccOutGuaPay = obj as AccOutGuaPay;
            accOutGuaPay.id.branch = UserController.branch;
            accOutGuaPay.id.no = String(adg1AC.getItemIndex(obj) + 1);
            accOutGuaPay.payDesc = (desc == "") ? null : desc;
            accOutGuaPay.payDate = DateField.stringToDate(df.text, Constants.DATE_FORMAT);
            accOutGuaPay.payPsn = UserController.person;
            accOutGuaPay.appNo = accOutGuaPay.fkAccOutGua.id.no;
            accOutGuaPay.appRefNo = accOutGuaPay.fkAccOutGua.id.refNo;
            accOutGuaPay.mediFee = 0;
            accOutGuaPay.other1 = 0;
            accOutGuaPay.other2 = 0;
          }
        }
        else
        {
          if (CommonUtil.validateGrid(adg2, ["fkAccInPsnGua.id.refNo", "mediFee"]).length > 0)
          {
            bol = false;
            return;
          }
          for each (obj in adg2AC)
          {
            var accInPsnGuaPay:AccInPsnGuaPay = obj as AccInPsnGuaPay;
            accInPsnGuaPay.id.branch = UserController.branch;
            accInPsnGuaPay.id.no = String(adg2AC.getItemIndex(obj) + 1);
            accInPsnGuaPay.payDesc = (desc == "") ? null : desc;
            accInPsnGuaPay.payDate = DateField.stringToDate(df.text, Constants.DATE_FORMAT);
            accInPsnGuaPay.payPsn = UserController.person;
            accInPsnGuaPay.appNo = accInPsnGuaPay.fkAccInPsnGua.id.no;
            accInPsnGuaPay.appRefNo = accInPsnGuaPay.fkAccInPsnGua.id.refNo;
            accInPsnGuaPay.other1 = 0;
            accInPsnGuaPay.other2 = 0;
          }
        }
        var results:ArrayCollection = (adg1.visible) ? adg1AC : adg2AC;

        saveAccGua(results);
      }


      /** 保存 */
      private function saveAccGua(newAC:ArrayCollection):void
      {
        // 校验: 理赔和配付只能一一对应,目前由后台唯一索引保证,此处未验证
        if (ObjectUtil.compare(oldAC, newAC, 1) == 0)
        {
          Alert.show(resourceManager.getString("gcc", "save.no.change"), Constants.APP_NAME, 
            Alert.OK, null, null, Constants.ICON32_WARNING);
          bol = false;
          return;
        }
        if (newAC == adg1AC)
        {
          if (oldAC.length > 0 && newAC.length > 0)
          {
            for each (var obj:Object in newAC)
            {
              obj.id.refNo = (obj.id.refNo == "" || obj.id.refNo == null) ? oldAC[0].id.refNo : obj.id.refNo;
            }
          }
          ClaimsController.saveAccOutGuaPay(oldAC, newAC, UserController.branchId, onSaveAccOutGuaPaySuccess);
        }
        else if (newAC == adg2AC)
        {
          if (oldAC.length > 0 && newAC.length > 0)
          {
            for each (var obj1:Object in newAC)
            {
              obj1.id.refNo = (obj1.id.refNo == "" || obj1.id.refNo == null) ? oldAC[0].id.refNo : obj1.id.refNo;
            }
          }
          ClaimsController.saveAccInPsnGuaPay(oldAC, newAC, UserController.branchId, onSaveAccInPsnGuaPaySuccess);
        }
      }

      private function onSaveAccOutGuaPaySuccess(e:ResultEvent):void
      {
        tiAccno.text = (adg1AC.length == 0) ? "" : e.result as String;
        // 刷新已有理赔凭证
        for each (var obj:Object in adg1AC)
        {
          (obj as AccOutGuaPay).id.refNo = e.result as String;
        }
        oldAC = ObjectUtil.copy(adg1AC) as ArrayCollection;
        if (tiAccno.text == "")
          Alert.show("删除成功",
            Constants.APP_NAME, Alert.OK, null, function(evt:CloseEvent):void 
            {
              if(bol)dispatchEvent(CommonEvent.CLOSE_EVENT);
              bol = false;
            }, Constants.ICON32_INFO);
        else
          Alert.show(resourceManager.getString('gcc_safety', 'accoutguapay.save.success', [e.result as String]),
            Constants.APP_NAME, Alert.OK, null, function(evt:CloseEvent):void 
            {
              if(bol)dispatchEvent(CommonEvent.CLOSE_EVENT);
              bol = false;
            }, Constants.ICON32_INFO);
      }

      private function onSaveAccInPsnGuaPaySuccess(e:ResultEvent):void
      {
        tiAccno.text = (adg2AC.length == 0) ? "" : e.result as String;
        // 刷新已有理赔凭证
        for each (var obj:Object in adg2AC)
        {
          (obj as AccInPsnGuaPay).id.refNo = e.result as String;
        }
        oldAC = ObjectUtil.copy(adg2AC) as ArrayCollection;
        if (tiAccno.text == "")
          Alert.show("删除成功",
            Constants.APP_NAME, Alert.OK, null, function(evt:CloseEvent):void 
            {
              if(bol)dispatchEvent(CommonEvent.CLOSE_EVENT);
              bol = false;
            }, Constants.ICON32_INFO);
        else
          Alert.show(resourceManager.getString('gcc_safety', 'accinpsnguapay.save.success', [e.result as String]),
            Constants.APP_NAME, Alert.OK, null, function(evt:CloseEvent):void 
            {
              if(bol)dispatchEvent(CommonEvent.CLOSE_EVENT);
              bol = false;
            }, Constants.ICON32_INFO);
      }

      private function onCloseClickHandler():void
      {
        var results:ArrayCollection = (adg1.visible) ? adg1AC : adg2AC;
        if (ObjectUtil.compare(oldAC, results, 1) != 0)
        {
          Alert.show("数据已经修改是否保存", Constants.APP_NAME, 
            Alert.YES|Alert.NO, null, function(evt:CloseEvent):void
            {
              if(evt.detail == Alert.YES){
                bol =true;
                onSaveClickHandler();
              }
            }, Constants.ICON32_QUESTION);
          return;
        }
        dispatchEvent(CommonEvent.CLOSE_EVENT);
      }
    ]]>
  </mx:Script>
</mx:VBox>
