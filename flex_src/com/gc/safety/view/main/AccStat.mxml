<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
           preinitialize="onPreinitialize()" creationComplete="onCreationComplete()">
  <mx:AdvancedDataGrid id="adgAccStatList" width="100%" height="100%" dataProvider="{accStatList}"
                       doubleClickEnabled="true"
                       doubleClick="onDoubleClick(adgAccStatList.selectedItem)"
                       labelFunction="{CommonUtil.gridLabelFunction}"
                       styleFunction="onStyleFunction">
    <mx:columns>
      <mx:AdvancedDataGridColumn dataField="no" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                 headerText="序号" sortCompareFunction="onSortCompareFunction"
                                 textAlign="center" width="64"/>
      <mx:AdvancedDataGridColumn dataField="{Constants.PROP_NAME_LABEL}"/>
      <mx:AdvancedDataGridColumn dataField="{Constants.PROP_NAME_COUNT}"
                                 formatter="{Constants.NUMBER_FORMATTER_N0}" textAlign="right"/>
      <mx:AdvancedDataGridColumn dataField="_totalLc" textAlign="right"/>
      <mx:AdvancedDataGridColumn dataField="_times" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                 textAlign="right"/>
      <mx:AdvancedDataGridColumn dataField="_totalLose" textAlign="right"/>
      <mx:AdvancedDataGridColumn dataField="_totalMaim" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                 textAlign="right"/>
      <mx:AdvancedDataGridColumn dataField="_totalDead" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                 textAlign="right"/>
    </mx:columns>
  </mx:AdvancedDataGrid>
  <mx:Script>
    <![CDATA[
      import com.gc.CommonEvent;
      import com.gc.safety.Events;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
      import mx.utils.ObjectUtil;
      import com.gc.safety.model.AccInPsnPay;
      import com.gc.safety.model.AccOutPsnPay;
      import com.gc.safety.controller.CommonController;
      import com.gc.safety.model.AccInPsn;
      import com.gc.safety.model.AccOutObj;
      import com.gc.safety.model.AccOutPsn;
      import com.gc.safety.model.Accident;
      import com.gc.common.model.Line;
      import com.gc.common.model.EquOnline;
      import com.gc.Constants;
      import mx.collections.ArrayCollection;
      import com.gc.util.CommonUtil;

      [Bindable]
      private var accStatList:ArrayCollection = new ArrayCollection();

      private function onPreinitialize():void
      {
      }

      private function onCreationComplete():void
      {
        CommonUtil.setDataGridColumns(adgAccStatList,"gcc_safety","tree.accStat");
        addEventListener(CommonEvent.EXPORT,function(event:CommonEvent):void 
          {
            CommonUtil.export(CommonUtil.getGridData(adgAccStatList),CommonUtil.getGridHeaders(adgAccStatList),null,event.data.label + "事故统计列表.xls");
          });
      }

      private function onSortCompareFunction(obj1:Object,obj2:Object):int
      {
        return ObjectUtil.numericCompare(obj1.no,obj2.no);
      }

      private function onStyleFunction(data:Object, col:AdvancedDataGridColumn):Object
      {
        if (data.hasOwnProperty("color") && data["color"] != null)
        {
          return { color:0x8E388E, fontWeight:"bold", fontSize:12 };
        }

        return {};
      }

      private function onDoubleClick(item:Object):void
      {
        if (item != null)
          parent.dispatchEvent(new CommonEvent(CommonEvent.DBLCLICKED,item));
      }

      public function statAccs(item:Object, ancestors:Array, orderColumns:Array):void
      {
        if (item == null || !(item["children"] is Array))
          return;
        accStatList.removeAll();
        counter(item);
        var children:Array = item["children"] as Array;
        var i:int = 0;
        for each (var child:Object in children)
        {
          child.no = ++i;
          child.color = null;
          accStatList.addItem(child);
        }
        item.no = ++i;
        item.color = "";
        accStatList.addItem(item);
      }

      private function counter(item:Object):void
      {
        if (item == null)
          return;
        if (item["children"] == null || !(item["children"] is Array))
        {
//          item[Constants.PROP_NAME_COUNT] = 1;
          item[Constants.PROP_NAME_COUNT] = (item.downDate != null && item.downDate <= CommonController.now) ? 0 : 1;
          // TODO: 显示公务车,没有线路的部门,后台尚未处理
          if (item is EquOnline && item["id"] == 0)
          {
            item[Constants.PROP_NAME_COUNT] = 0;
            item["_totalLc"] = 0;
            item["_times"] = 0;
            item["_totalLose"] = 0;
            item["_totalMaim"] = 0;
            item["_totalDead"] = 0;
            return;
          }
          item["_totalLc"] = item.mileage;
          item["_times"] = item.accs.length;
          item["_totalLose"] = 0;
          item["_totalMaim"] = 0;
          item["_totalDead"] = 0;
          for each (var acc:Accident in item.accs)
          {
            for each (var outPsn:AccOutPsn in acc.accOutPsns)
            {
              outPsn.mediFee = 0;
              outPsn.other1 = 0;
              outPsn.other2 = 0;
              for each (var outPsnPay:AccOutPsnPay in outPsn.accOutPsnPays)
              {
                outPsn.mediFee += outPsnPay.mediFee;
                outPsn.other1 += outPsnPay.other1;
                outPsn.other2 += outPsnPay.other2;
              }
              item["_totalLose"] += outPsn.mediFee + outPsn.other1 + outPsn.other2;
              if (outPsn.status == 0)
                item["_totalDead"] += 1;
              else if (outPsn.status == 1)
                item["_totalMaim"] += 1;
            }
            for each (var outObj:AccOutObj in acc.accOutObjs)
            {
              item["_totalLose"] += outObj.payFee;
            }
            for each (var inPsn:AccInPsn in acc.accInPsns)
            {
              inPsn.mediFee = 0;
              inPsn.other1 = 0;
              inPsn.other2 = 0;
              for each (var inPsnPay:AccInPsnPay in inPsn.accInPsnPays)
              {
                inPsn.mediFee += inPsnPay.mediFee;
                inPsn.other1 += inPsnPay.other1;
                inPsn.other2 += inPsnPay.other2;
              }
              item["_totalLose"] += inPsn.mediFee + inPsn.other1 + inPsn.other2;
              if (inPsn.status == 0)
                item["_totalDead"] += 1;
              else if (inPsn.status == 1)
                item["_totalMaim"] += 1;
            }
          }
          return;
        }
        var children:Array = item["children"];
        var count:int = 0;
        var totalLc:Number = 0;
        var times:int = 0;
        var totalLose:Number = 0;
        var totalMaim:int = 0;
        var totalDead:int = 0;
        for each (var child:Object in children)
        {
          if (!child.hasOwnProperty(Constants.PROP_NAME_COUNT))
            counter(child);
          count += child[Constants.PROP_NAME_COUNT];
          totalLc += child["_totalLc"];
          times += child["_times"];
          totalLose += child["_totalLose"];
          totalMaim += child["_totalMaim"];
          totalDead += child["_totalDead"];
        }
        item[Constants.PROP_NAME_COUNT] = count;
        item["_totalLc"] = totalLc;
        item["_times"] = times;
        item["_totalLose"] = totalLose;
        item["_totalMaim"] = totalMaim;
        item["_totalDead"] = totalDead;
      }
    ]]>
  </mx:Script>
</mx:Canvas>
