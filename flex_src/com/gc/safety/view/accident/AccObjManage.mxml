<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
         horizontalAlign="center" preinitialize="onPreinitialize()"
         creationComplete="onCreationComplete()" keyDown="CommonUtil.keyDown(event)">
  <mx:Label text="赔偿对象管理" textAlign="center" width="100%" fontSize="16" fontWeight="bold"
            height="10%"/>
  <mx:TabNavigator id="tnObjView" width="80%" height="70%" creationPolicy="all" paddingTop="0"
                   change="onChange(event)">
    <mx:Box id="viewOutPsn" label="撞击人员" width="100%" height="100%">
      <mx:AdvancedDataGrid id="adgOutPsn" labelFunction="{CommonUtil.gridLabelFunction}"
                           dataProvider="{outPsns}" click="clickItemOP(adgOutPsn.selectedItem)"
                           doubleClickEnabled="true"
                           doubleClick="doubleClickItemOP(adgOutPsn.selectedItem)" height="100%"
                           width="100%">
        <mx:columns>
          <mx:AdvancedDataGridColumn dataField="fkAccident" dataTipField="fkAccident.no"/>
          <mx:AdvancedDataGridColumn dataField="id.no" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                     headerText="人员序号"/>
          <mx:AdvancedDataGridColumn dataField="name"/>
          <mx:AdvancedDataGridColumn dataField="sex"/>
          <mx:AdvancedDataGridColumn dataField="age" formatter="{Constants.NUMBER_FORMATTER_N0}"/>
          <mx:AdvancedDataGridColumn dataField="regAddress"/>
          <mx:AdvancedDataGridColumn dataField="address"/>
          <mx:AdvancedDataGridColumn dataField="tel"/>
          <mx:AdvancedDataGridColumn dataField="duty" dataTipField="duty.name"/>
          <mx:AdvancedDataGridColumn dataField="desc"/>
          <mx:AdvancedDataGridColumn dataField="maim" dataTipField="maim.label"
                                     labelFunction="getStatusOP"/>
        </mx:columns>
      </mx:AdvancedDataGrid>
    </mx:Box>
    <mx:Box id="viewInPsn" label="车上人员" width="100%">
      <mx:AdvancedDataGrid id="adgInPsn" labelFunction="{CommonUtil.gridLabelFunction}"
                           dataProvider="{inPsns}" click="clickItemIP(adgInPsn.selectedItem)"
                           doubleClickEnabled="true"
                           doubleClick="doubleClickItemIP(adgInPsn.selectedItem)" height="100%"
                           width="100%">
        <mx:columns>
          <mx:AdvancedDataGridColumn dataField="fkAccident" dataTipField="fkAccident.no"/>
          <mx:AdvancedDataGridColumn dataField="id.no" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                     headerText="人员序号"/>
          <mx:AdvancedDataGridColumn dataField="name"/>
          <mx:AdvancedDataGridColumn dataField="sex"/>
          <mx:AdvancedDataGridColumn dataField="age" formatter="{Constants.NUMBER_FORMATTER_N0}"/>
          <mx:AdvancedDataGridColumn dataField="regAddress"/>
          <mx:AdvancedDataGridColumn dataField="address"/>
          <mx:AdvancedDataGridColumn dataField="tel"/>
          <mx:AdvancedDataGridColumn dataField="duty" dataTipField="duty.name"/>
          <mx:AdvancedDataGridColumn dataField="desc"/>
          <mx:AdvancedDataGridColumn dataField="maim" dataTipField="maim.label"
                                     labelFunction="getStatusIP"/>
        </mx:columns>
      </mx:AdvancedDataGrid>
    </mx:Box>
    <mx:Box id="viewOutObj" label="撞击对象" width="100%">
      <mx:AdvancedDataGrid id="adgOutObj" labelFunction="{CommonUtil.gridLabelFunction}"
                           dataProvider="{outObjs}" click="clickItemOB(adgOutObj.selectedItem)"
                           doubleClickEnabled="true"
                           doubleClick="doubleClickItemOB(adgOutObj.selectedItem)" height="100%"
                           width="100%">
        <mx:columns>
          <mx:AdvancedDataGridColumn dataField="fkAccident" dataTipField="fkAccident.no"/>
          <mx:AdvancedDataGridColumn dataField="id.no" formatter="{Constants.NUMBER_FORMATTER_N0}"
                                     headerText="对象序号"/>
          <mx:AdvancedDataGridColumn dataField="obj" dataTipField="obj.name"/>
          <mx:AdvancedDataGridColumn dataField="tel"/>
          <mx:AdvancedDataGridColumn dataField="address"/>
          <mx:AdvancedDataGridColumn dataField="duty" dataTipField="duty.name"/>
          <mx:AdvancedDataGridColumn dataField="desc"/>
        </mx:columns>
      </mx:AdvancedDataGrid>
    </mx:Box>
  </mx:TabNavigator>
  <mx:HBox id="buttonBox" width="100%" horizontalAlign="center" paddingBottom="0" paddingTop="10"
           height="10%">
    <mx:Button id="add" label="+" click="addItem(event)" width="55"/>
    <mx:Button id="del" label="-" click="delItem(event)" width="55"/>
    <mx:Button id="modify" label="{resourceManager.getString('gcc', 'modify')}"
               click="modifyItem(event)" width="55"/>
  </mx:HBox>
  <mx:HBox id="hbDown" width="100%" horizontalAlign="center" paddingTop="10" paddingBottom="10"
           height="10%">
    <mx:Button id="btClose" label="{resourceManager.getString('gcc','close')}" click="close(event)"
               width="70" height="35"/>
  </mx:HBox>
  <mx:Script>
    <![CDATA[
      import mx.collections.SortField;
      import mx.collections.Sort;
      import mx.managers.PopUpManager;
      import com.gc.safety.Events;
      import mx.core.IFlexDisplayObject;
      import mx.rpc.events.ResultEvent;
      import com.gc.common.controller.UserController;
      import com.gc.safety.controller.AccidentController;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
      import com.gc.util.CommonUtil;
      import com.gc.safety.model.AccInPsn;
      import com.gc.safety.model.AccOutObj;
      import mx.collections.ArrayCollection;
      import com.gc.safety.model.AccOutPsn;
      import com.gc.CommonEvent;
      import mx.events.CloseEvent;
      import com.gc.Constants;
      import mx.controls.Alert;

      [Bindable]
      private var outPsns:ArrayCollection = new ArrayCollection();
      private var outPsn:AccOutPsn;
      [Bindable]
      private var outObjs:ArrayCollection = new ArrayCollection();
      private var outObj:AccOutObj;
      [Bindable]
      private var inPsns:ArrayCollection = new ArrayCollection();
      private var inPsn:AccInPsn;
      private var sortNo:Sort = new Sort();

      private function onPreinitialize():void
      {
        addEventListener(CommonEvent.CREATED,function init(event:CommonEvent):void {
            refresh();
          });
        AccidentController.preloadBaseLists(UserController.branchId,["accDutyList","accObjectList"]);
      }

      private function refresh():void
      {
        AccidentController.getPOPs(UserController.branchId,function(event:ResultEvent):void 
          {
            var list:ArrayCollection = event.result as ArrayCollection;
            outPsns = list[0];
            inPsns = list[1];
            outObjs = list[2];
            if(outPsns.length > 0)
            {
              adgOutPsn.selectedIndex = 0;
              outPsn = outPsns.getItemAt(adgOutPsn.selectedIndex) as AccOutPsn;
            }
            if(inPsns.length > 0)
            {
              adgInPsn.selectedIndex = 0;
              inPsn = inPsns.getItemAt(adgInPsn.selectedIndex) as AccInPsn;
            }
            if(outPsns.length > 0)
            {
              adgOutObj.selectedIndex = 0;
              outObj = outObjs.getItemAt(adgOutObj.selectedIndex) as AccOutObj;
            }	
          });
      }

      private function onCreationComplete():void
      {
        CommonUtil.setDataGridColumns(adgOutPsn,'gcc_safety','accoutpsn');
        CommonUtil.setDataGridColumns(adgInPsn,'gcc_safety','accinpsn');
        CommonUtil.setDataGridColumns(adgOutObj,'gcc_safety','accoutobj');
      }

      private function onChange(event:Event):void
      {
      /**
         if (tnObjView.selectedChild == viewOutPsn)
         {

         }
         else if (tnObjView.selectedChild == viewInPsn)
         {

         }
         else if (tnObjView.selectedChild == viewOutObj)
         {

         }
       */
      }

      private function clickItemOP(item:Object):void
      {
        outPsn = item as AccOutPsn;
      }

      private function doubleClickItemOP(item:Object):void
      {
        outPsn = item as AccOutPsn;
      }

      private function clickItemOB(item:Object):void
      {
        outObj = item as AccOutObj;
      }

      private function doubleClickItemOB(item:Object):void
      {
        outObj= item as AccOutObj;
      }

      private function clickItemIP(item:Object):void
      {
        inPsn = item as AccInPsn;
      }

      private function doubleClickItemIP(item:Object):void
      {
        inPsn = item as AccInPsn;
      }

      private function getStatusOP(item:Object, column:AdvancedDataGridColumn):String
      {
        if (item == null)
          return null;
        if (item.status == 0 && item.id.no > 0)
          return Constants.MAIMS[0].label;
        else if (item.status == 1)
          return Constants.MAIMS[1].label;
        else
          return null;
      }

      private function getStatusIP(item:Object, column:AdvancedDataGridColumn):String
      {
        if (item == null)
          return null;
        if (item.status == 0 && item.id.no > 0)
          return Constants.MAIMS[0].label;
        else if (item.status == 1)
          return Constants.MAIMS[1].label;
        else
          return null;
      }

      private function addItem(event:Event):void
      {
        if (tnObjView.selectedChild == viewOutPsn)
        {
          if (outPsns.length <= 0)
            return;
          var outPsnWin:IFlexDisplayObject = CommonUtil.popupWindow(OutPsnWin,"增加撞击人员");
          outPsnWin.dispatchEvent(new Events(Events.ADD,outPsn));
          outPsnWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          outPsnWin.addEventListener(Events.SAVE_SUCCESS,function(evt:Events):void {
              PopUpManager.removePopUp(outPsnWin);
              refresh();
            });
        }
        else if (tnObjView.selectedChild == viewInPsn)
        {
          if (inPsns.length <= 0)
            return;
          var inPsnWin:IFlexDisplayObject = CommonUtil.popupWindow(InPsnWin,"增加客伤人员");
          inPsnWin.dispatchEvent(new Events(Events.ADD,inPsn));
          inPsnWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          inPsnWin.addEventListener(Events.SAVE_SUCCESS,function(evt:Events):void {
              PopUpManager.removePopUp(inPsnWin);
              refresh();
            });
        }
        else if (tnObjView.selectedChild == viewOutObj)
        {
          if (outObjs.length <= 0)
            return;
          var outObjWin:IFlexDisplayObject = CommonUtil.popupWindow(OutObjWin,"增加撞击对象");
          outObjWin.dispatchEvent(new Events(Events.ADD, outObj));
          outObjWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          outObjWin.addEventListener(Events.SAVE_SUCCESS, function(evt:Events):void 
            {
              PopUpManager.removePopUp(outObjWin);
              refresh();
            });
        }
      }

      private function delItem(event:Event):void
      {
        if (tnObjView.selectedChild == viewOutPsn)
        {
          if (outPsns.length <= 0 || outPsn.id.no == 0)
            return;
          var outPsnWin:IFlexDisplayObject = CommonUtil.popupWindow(OutPsnWin,"删除撞击人员");
          outPsnWin.dispatchEvent(new Events(Events.DELETE,outPsn));
          outPsnWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          outPsnWin.addEventListener(Events.DEL_SUCCESS,function(evt:Events):void {
              PopUpManager.removePopUp(outPsnWin);
              refresh();
            });
        }
        else if (tnObjView.selectedChild == viewInPsn)
        {
          if (inPsns.length <= 0 || inPsn.id.no == 0)
            return;
          var inPsnWin:IFlexDisplayObject = CommonUtil.popupWindow(InPsnWin,"删除客伤人员");
          inPsnWin.dispatchEvent(new Events(Events.DELETE,inPsn));
          inPsnWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          inPsnWin.addEventListener(Events.DEL_SUCCESS,function(evt:Events):void {
              PopUpManager.removePopUp(inPsnWin);
              refresh();
            });
        }
        else if (tnObjView.selectedChild == viewOutObj)
        {
          if (outObjs.length <= 0 || outObj.id.no == 0)
            return;
          var outObjWin:IFlexDisplayObject = CommonUtil.popupWindow(OutObjWin,"删除撞击对象");
          outObjWin.dispatchEvent(new Events(Events.DELETE, outObj));
          outObjWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          outObjWin.addEventListener(Events.DEL_SUCCESS, function(evt:Events):void 
            {
              PopUpManager.removePopUp(outObjWin);
              refresh();
            });
        }
      }

      private function modifyItem(event:Event):void
      {
        if (tnObjView.selectedChild == viewOutPsn)
        {
          if (outPsns.length <= 0 || outPsn.id.no == 0)
            return;
          var outPsnWin:IFlexDisplayObject = CommonUtil.popupWindow(OutPsnWin,"修改撞击人员");
          outPsnWin.dispatchEvent(new Events(Events.UPDATE,outPsn));
          outPsnWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          outPsnWin.addEventListener(Events.UPDATE_SUCCESS,function(evt:Events):void {
              PopUpManager.removePopUp(outPsnWin);
              refresh();
            });
        }
        else if (tnObjView.selectedChild == viewInPsn)
        {
          if (inPsns.length <= 0 || inPsn.id.no == 0)
            return;
          var inPsnWin:IFlexDisplayObject = CommonUtil.popupWindow(InPsnWin,"修改客伤人员");
          inPsnWin.dispatchEvent(new Events(Events.UPDATE,inPsn));
          inPsnWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          inPsnWin.addEventListener(Events.UPDATE_SUCCESS,function(evt:Events):void {
              PopUpManager.removePopUp(inPsnWin);
              refresh();
            });
        }
        else if (tnObjView.selectedChild == viewOutObj)
        {
          if (outObjs.length <= 0 || outObj.id.no == 0)
            return;
          var outObjWin:IFlexDisplayObject = CommonUtil.popupWindow(OutObjWin,"修改撞击对象");
          outObjWin.dispatchEvent(new Events(Events.UPDATE, outObj));
          outObjWin.addEventListener(Events.REFRESH,function(e:Events):void{refresh();});
          outObjWin.addEventListener(Events.UPDATE_SUCCESS, function(evt:Events):void 
            {
              PopUpManager.removePopUp(outObjWin);
              refresh();
            });
        }
      }

      private function close(event:Event):void
      {
        Alert.show("确定要离开本页面",Constants.APP_NAME,Alert.YES | Alert.NO,null,function(evt:CloseEvent):void 
          {
            if(evt.detail == Alert.NO) return;
            dispatchEvent(CommonEvent.CLOSE_EVENT);
          },Constants.ICON32_QUESTION);
      }
    ]]>
  </mx:Script>
</mx:VBox>
