<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
           preinitialize="onPreinitialize()" creationComplete="onCreationComplete()">
  <mx:VBox width="100%">
    <mx:AdvancedDataGrid id="adgInPsn" labelFunction="{CommonUtil.gridLabelFunction}" rowCount="6"
                         dataProvider="{inPsns}" editable="true" keyDown="keyDownHandler(event)"
                         sortableColumns="false" horizontalScrollPolicy="auto"
                         itemEditEnd="onItemEditEnd(event)" itemRenderer="mx.controls.Label">
      <mx:groupedColumns>
        <mx:AdvancedDataGridColumn dataField="id" dataTipField="id.no" editable="false" width="64"
                                   labelFunction="setNo"/>
        <mx:AdvancedDataGridColumnGroup 
                                        headerText="{resourceManager.getString('gcc_safety','acc.basic.info')}"
                                        headerRenderer="{header}">
          <mx:AdvancedDataGridColumn dataField="name"/>
          <mx:AdvancedDataGridColumn dataField="sex"/>
          <mx:AdvancedDataGridColumn dataField="age"/>
          <mx:AdvancedDataGridColumn dataField="regAddress"/>
          <mx:AdvancedDataGridColumn dataField="address"/>
          <mx:AdvancedDataGridColumn dataField="tel"/>
          <mx:AdvancedDataGridColumn dataField="duty" dataTipField="duty.name"/>
          <mx:AdvancedDataGridColumn dataField="desc" itemEditor="{textArea}"/>
          <mx:AdvancedDataGridColumn dataField="maim" dataTipField="maim.label"/>
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumnGroup 
                                        headerText="{resourceManager.getString('gcc_safety','acc.gua.reparation')}"
                                        headerRenderer="{header}">
          <mx:AdvancedDataGridColumn dataField="mediFee" itemEditor="{numberInput}"/>
          <mx:AdvancedDataGridColumn dataField="other1" itemEditor="{numberInput}"/>
          <mx:AdvancedDataGridColumn dataField="other2" itemEditor="{numberInput}"/>
          <!--mx:AdvancedDataGridColumn dataField="payDate" itemEditor="{dateField}"
               editorDataField="selectedDate"/>
               <mx:AdvancedDataGridColumn dataField="payDesc" itemEditor="{textArea}"/>
               <mx:AdvancedDataGridColumn dataField="payPsn" dataTipField="payPsn.name"/-->
        </mx:AdvancedDataGridColumnGroup>
        <mx:AdvancedDataGridColumn width="1"/>
      </mx:groupedColumns>
    </mx:AdvancedDataGrid>
  </mx:VBox>
  <mx:Script>
    <![CDATA[
      import com.gc.controls.PopUpTextArea;
      import com.gc.safety.Events;
      import com.gc.controls.advancedDataGridClasses.SuperDataGridHeaderRenderer;
      import mx.controls.DateField;
      import mx.events.AdvancedDataGridEventReason;
      import mx.controls.TextInput;
      import com.gc.common.controller.UserController;
      import com.gc.Constants;
      import com.gc.util.CommonUtil;
      import com.gc.controls.AdvancedClassFactory;
      import com.gc.safety.model.AccInPsn;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
      import mx.collections.ArrayCollection;
      import mx.events.AdvancedDataGridEvent;

      [Bindable]
      private var header:AdvancedClassFactory;
      [Bindable]
      private var numberInput:AdvancedClassFactory;
      [Bindable]
      private var dateField:AdvancedClassFactory;
      [Bindable]
      private var textArea:AdvancedClassFactory;
      private var branchId:int;
      [Bindable]
      public var inPsns:ArrayCollection = new ArrayCollection();
      private var inPsn:AccInPsn;
      private var fields:Array;
      private var inPsnFee:Number = 0;

      private function onPreinitialize():void
      {
        branchId = UserController.branchId;
        numberInput=new AdvancedClassFactory(TextInput);
        numberInput.properties={restrict: "0-9"};
        dateField=new AdvancedClassFactory(DateField);
        dateField.properties={formatString: Constants.DATE_FORMAT, showToday: true, yearNavigationEnabled: true};
        textArea=new AdvancedClassFactory(PopUpTextArea);
        header = new AdvancedClassFactory(SuperDataGridHeaderRenderer);
        if ([6,11,12].indexOf(UserController.safetyLimit) >= 0)
        {
          fields=["mediFee","other1","other2","payDate","payDesc"];
        }
        else
        {
          fields=[];
        }
      }

      private function onCreationComplete():void
      {
        CommonUtil.setDataGridColumns(adgInPsn, "gcc_safety", "accinpsn", function(obj:Object):void
          {
            if (obj is AdvancedDataGridColumn)
            {
              var column:AdvancedDataGridColumn=obj as AdvancedDataGridColumn;
              column.editable=(fields.indexOf(column.dataField) >= 0);
            }
          });
        adgInPsn.percentWidth = 100;
      }

      private function serialStyleFunction(data:Object, column:AdvancedDataGridColumn):Object
      {
        column.setStyle("backgroundColor", 0xD8D8D8);
        return {color:0x0000FF, fontWeight:"bold", textAlign:"center"};
      }

      private function setNo(item:Object, column:AdvancedDataGridColumn):int
      {
        column.styleFunction = serialStyleFunction;
        var i:int = inPsns.getItemIndex(item) + 1;
        if (inPsn == null)
        {
          inPsn = new AccInPsn();
        }
        inPsn.id.no = i;
        return i;
      }

      private function onItemEditEnd(event:AdvancedDataGridEvent):void
      {
        if (event.itemRenderer && event.reason != AdvancedDataGridEventReason.CANCELLED)
        {
          var adg:AdvancedDataGrid=event.currentTarget as AdvancedDataGrid;
          var column:AdvancedDataGridColumn=adg.columns[event.columnIndex];
          var newData:Object=adg.itemEditorInstance[column.editorDataField];
          var property:String=column.dataField;
          var data:Object=event.itemRenderer.data;
          try
          {
            if (newData == "" && CommonUtil.getAccessorValue(data, property) == null)
              event.reason=AdvancedDataGridEventReason.CANCELLED;
            else
              data[property]=newData;
            if (data[property] == "")
              data[property] = null;
            if (data["payPsn"]["id"] != UserController.personId)
              data["payPsn"]=UserController.person;
          }
          catch (error:Error)
          {
            event.reason=AdvancedDataGridEventReason.CANCELLED;
          }
          if (data["mediFee"] != null || data["other1"] != null || data["other2"] != null)
          {
            inPsnFee = 0;
            for (var i:int=0; i < inPsns.length; i++)
            {
              var fee:Number = inPsns[i]["mediFee"] + inPsns[i]["other1"] + inPsns[i]["other2"];
              inPsnFee += fee;
            }
            dispatchEvent(new Events(Events.ADD_INPSNFEE, inPsnFee));
          }
        }
        if (adgInPsn.errorString != null)
        {
          adgInPsn.errorString = null;
        }
      }

      public function getInPsns(ips:ArrayCollection):void
      {
        inPsns.removeAll();
        if (ips != null)
        {
          if (ips.length > 0)
          {
            inPsns = ips;
            inPsnFee = 0;
            for (var i:int=0; i < inPsns.length; i++)
            {
              if (inPsns[i]["status"] == 0)
                inPsns[i]["maim"] = Constants.MAIMS[0];
              var fee:Number = inPsns[i]["mediFee"] + inPsns[i]["other1"] + inPsns[i]["other2"];
              inPsnFee += fee;
            }
            dispatchEvent(new Events(Events.ADD_INPSNFEE, inPsnFee));
          }
        }
      }

      public function setAdgEditable(able:Boolean):void
      {
        fields= (able) ? ["mediFee","other1","other2","payDate","payDesc"] : [];
        onCreationComplete();
      }
    ]]>
  </mx:Script>
</mx:Canvas>
