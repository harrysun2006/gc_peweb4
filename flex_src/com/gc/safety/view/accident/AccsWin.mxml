<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="800" height="400"
                title="处理事故列表" horizontalAlign="center" keyDown="escape(event)"
                creationComplete="onCreationComplete()" horizontalScrollPolicy="off"
                verticalScrollPolicy="off">
  <mx:VBox width="100%" horizontalAlign="center" horizontalScrollPolicy="auto">
    <mx:AdvancedDataGrid id="adgAccs" width="100%" height="301"
                         labelFunction="{CommonUtil.gridLabelFunction}" doubleClickEnabled="true"
                         doubleClick="doubleClickItem(adgAccs.selectedItem)"
                         click="clickItem(adgAccs.selectedItem)" dataProvider="{accs}"
                         horizontalScrollPolicy="auto">
      <mx:columns>
        <mx:AdvancedDataGridColumn dataField="dept" dataTipField="dept.name"/>
        <mx:AdvancedDataGridColumn dataField="date" labelFunction="onDateFormating" width="165"/>
        <mx:AdvancedDataGridColumn dataField="no"/>
        <mx:AdvancedDataGridColumn dataField="statusStr"/>
        <mx:AdvancedDataGridColumn dataField="line" dataTipField="line.name"/>
        <mx:AdvancedDataGridColumn dataField="bus" dataTipField="bus.useId"/>
        <mx:AdvancedDataGridColumn dataField="bus" dataTipField="bus.authNo"/>
        <mx:AdvancedDataGridColumn dataField="driver" dataTipField="driver.workerId"/>
        <mx:AdvancedDataGridColumn dataField="driver" dataTipField="driver.name"/>
      </mx:columns>
    </mx:AdvancedDataGrid>
    <mx:HBox width="100%" horizontalAlign="center" paddingTop="10" paddingBottom="10">
      <mx:Button id="btSure" label="确定" click="sure(event)"/>
      <mx:Label width="40"/>
      <mx:Button id="btClose" label="取消" click="cancel(event)"/>
    </mx:HBox>
  </mx:VBox>
  <mx:Script>
    <![CDATA[
      import com.gc.util.DateUtil;
      import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
      import mx.events.FocusRequestDirection;
      import mx.managers.IFocusManagerComponent;
      import mx.managers.IFocusManager;
      import mx.managers.PopUpManager;
      import mx.core.Application;
      import mx.core.Container;
      import mx.controls.Alert;
      import mx.rpc.events.ResultEvent;
      import mx.collections.ArrayCollection;
      import com.gc.CommonEvent;
      import com.gc.common.model.Department;
      import com.gc.common.controller.UserController;
      import com.gc.Constants;
      import com.gc.safety.controller.AccidentController;
      import com.gc.safety.Events;
      import com.gc.safety.model.Accident;
      import com.gc.util.CommonUtil;

      private var accident:Accident;
      [Bindable]
      public var dept:Department;
      [Bindable]
      private var accs:ArrayCollection = new ArrayCollection();
      [Bindable]
      public var clickType:String;

      private function onCreationComplete():void
      {
        CommonUtil.setDataGridColumns(adgAccs, "gcc_safety", "accident", function(obj:Object):void{});
        btSure.setFocus();
        AccidentController.getAccsByStatus01(UserController.branchId,dept,successGetAccs);
      }

      private function successGetAccs(event:ResultEvent):void
      {
        var accidents:ArrayCollection = event.result as ArrayCollection;
        if (accidents != null)
        {
          for (var i:int=0; i < accidents.length; i++)
          {
            if (clickType == "p")
            {
              if (accidents[i]["status"] == 0 || accidents[i]["status"] == 1)
              {
                if (accidents[i]["status"] == 0)
                {
                  accidents[i]["statusStr"] = "未处理";
                }
                else if (accidents[i]["status"] == 1)
                {
                  accidents[i]["statusStr"] = "已处理";
                }
                accs.addItem(accidents[i]);
              }
            }
            if (clickType == "a")
            {
              if (accidents[i]["status"] == 1 || accidents[i]["status"] == 2)
              {
                if (accidents[i]["status"] == 1)
                {
                  accidents[i]["statusStr"] = "未审核";
                }
                else if (accidents[i]["status"] == 2)
                {
                  accidents[i]["statusStr"] = "已审核";
                }
                accs.addItem(accidents[i]);
              }
            }
          }
        }
      }

      private function onDateFormating(item:Object, column:AdvancedDataGridColumn):String
      {
        return DateUtil.formatDateTime(item.date);
      }

      private function clickItem(item:Object):void
      {
        accident = item as Accident;
      }

      private function doubleClickItem(item:Object):void
      {
//        accident = item as Accident;
//        if (accident == null)
//          return;
//        dispatchEvent(new Events(Events.DBCLICKED,accident));
//        PopUpManager.removePopUp(this);
      }

      private function sure(event:Event):void
      {
        if (accident == null)
        {
          Alert.show("请选择一行进行处理",Constants.APP_NAME,Alert.OK,null,null,Constants.ICON32_WARNING);
        }
        else
        {
          dispatchEvent(new Events(Events.CLICKED,accident));
          PopUpManager.removePopUp(this);
        }
      }

      private function cancel(event:Event):void
      {
        PopUpManager.removePopUp(this);
      }

      private function escape(event:KeyboardEvent):void
      {
        var dobj:DisplayObject=(event.target is DisplayObject) ? CommonUtil.findAncestor(event.target as DisplayObject, Container) : null;
        var focusManager:IFocusManager=(dobj is Container) ? (dobj as Container).focusManager : Application.application.focusManager;
        switch (event.keyCode)
        {
          case Keyboard.ENTER:
            var p:IFocusManagerComponent=focusManager.getFocus();
            if (p is Button)
            {
              (p as Button).dispatchEvent(CommonEvent.MOUSE_CLICK_EVENT);
              return;
            }
            focusManager.moveFocus(FocusRequestDirection.FORWARD);
            var n:IFocusManagerComponent=focusManager.getFocus();
            if (n is Button)
              (n as Button).dispatchEvent(CommonEvent.MOUSE_CLICK_EVENT);
            break;
          case Keyboard.ESCAPE:
            cancel(event);
            break;
        }
      }
    ]]>
  </mx:Script>
</mx:TitleWindow>
