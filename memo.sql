SELECT * FROM T_WORKER_TYPE
SELECT C_TYPE, COUNT(*) FROM T_WORKSHEET GROUP BY C_TYPE
SELECT C_BELONG, COUNT(*) FROM T_PERSONAL0 GROUP BY C_BELONG

-- ALTER TABLE PEADMIN.T_PERSONAL ADD CONSTRAINT FX_SEX FOREIGN KEY (C_SEX) REFERENCES PEADMIN.T_STDLIST (C_VALUE) ENABLE VALIDATE

-- imp system/admin file=pedb.dmp fromuser=peadmin touser=pedemo rows=n
-- imp system/admin file=pedb_20090516.dmp fromuser=peadmin touser=peadmin

/*
-- 移动表和索引到新的表空间并改变初始大小，对BLOGINDEX无效
ALTER TABLE T_RUNNING_INCOME MOVE TABLESPACE USERS
ALTER INDEX IDX_RINCOME_BUS REBUILD TABLESPACE USERS
ALTER INDEX IDX_RINCOME_DEPT REBUILD TABLESPACE USERS
ALTER INDEX IDX_RINCOME_LINE REBUILD TABLESPACE USERS
ALTER INDEX SYS_C0029075 REBUILD TABLESPACE USERS

ALTER TABLE T_RUNNING_INCOME MOVE TABLESPACE USERS STORAGE(INITIAL 16K NEXT 2M)
ALTER INDEX IDX_RINCOME_BUS REBUILD TABLESPACE USERS STORAGE(INITIAL 16K NEXT 2M)
ALTER INDEX IDX_RINCOME_DEPT REBUILD TABLESPACE USERS STORAGE(INITIAL 16K NEXT 2M)
ALTER INDEX IDX_RINCOME_LINE REBUILD TABLESPACE USERS STORAGE(INITIAL 16K NEXT 2M)
ALTER INDEX SYS_C0029075 REBUILD TABLESPACE USERS STORAGE(INITIAL 16K NEXT 2M)

ALTER INDEX SYS_C0028754 REBUILD TABLESPACE USERS STORAGE(INITIAL 16K NEXT 2M);
*/

SELECT TABLE_NAME FROM SYS.ALL_ALL_TABLES WHERE OWNER='PETEST' ORDER BY TABLE_NAME;
SELECT INDEX_NAME FROM SYS.ALL_INDEXES WHERE OWNER='PETEST' ORDER BY INDEX_NAME;
SELECT INDEX_NAME FROM SYS.ALL_INDEXES WHERE OWNER='PETEST' AND TABLESPACE_NAME='SYSTEM' ORDER BY INDEX_NAME;
-- ALTER TABLESPACE USERS DEFAULT STORAGE(INITIAL 16K NEXT 2M MAXEXTENTS 999);
-- ALTER INDEX IDX_RINCOME_DEPT COALESCE;
-- ALTER TABLE T_RUNNING_INCOME DEALLOCATE UNUSED;
-- TRUNCATE TABLE T_RUNNING_INCOME;

-- 查看/删除触发器
SELECT * FROM USER_OBJECTS WHERE OBJECT_NAME='TRG_PERSONALID';
SELECT COUNT(*) FROM USER_OBJECTS WHERE OBJECT_NAME='TRG_PERSONALID';
-- ALTER TRIGGER TRG_PERSONALSTATUS DISABLE;
-- ALTER TABLE T_PERSONAL ADD (CONSTRAINT FK_PSN_TYPE FOREIGN KEY (C_BELONG, C_TYPE) REFERENCES T_PSN_TYPE (C_BELONG,C_TYPE));
SELECT C_TYPE, COUNT(*) FROM T_PERSONAL WHERE C_TYPE NOT IN (SELECT C_TYPE FROM T_PSN_TYPE) GROUP BY C_TYPE;

SELECT C_BELONG, C_DEPART, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_DEPART;
SELECT C_BELONG, C_TYPE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_TYPE;
SELECT C_BELONG, C_MARRYSTATE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_MARRYSTATE;
SELECT C_BELONG, C_NATIVEPLACE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_NATIVEPLACE;
SELECT C_BELONG, C_PEOPLE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_PEOPLE;
SELECT C_BELONG, C_REGBELONG, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_REGBELONG;
SELECT C_BELONG, C_PARTY, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_PARTY;
SELECT C_BELONG, C_GRADE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_GRADE;
SELECT C_BELONG, C_SCHOOLHISTORY, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_SCHOOLHISTORY;
SELECT C_BELONG, C_SPECIFICATION, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_SPECIFICATION;
SELECT C_BELONG, C_DEGREE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_DEGREE;
SELECT C_BELONG, C_GRADUATE, COUNT(*) FROM T_PERSONAL GROUP BY C_BELONG, C_GRADUATE;

-- ALTER TABLE T_HRSAL_ITEM ADD (CONSTRAINT CHK_HRSAL_ITEM_TYPE CHECK (C_TYPE IN ('WG','SG','WF','DK','PZ')));

SELECT C_BELONG, C_DEPARTMENTID FROM T_DEPARTMENT 

-- 查看/删除表和序列
SELECT * FROM USER_TABLES WHERE TABLE_NAME = 'T_HR_LOG';
SELECT * FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SEQ_HR_LOG';

-- ALTER TABLE T_HR_LOG DROP PRIMARY KEY CASCADE;
-- DROP TABLE T_HR_LOG CASCADE CONSTRAINTS;
-- DROP SEQUENCE SEQ_HR_LOG;

SELECT SEQ_HR_LOG.NEXTVAL FROM DUAL;

-- 查看表的主外键
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'T_PERSONAL' AND CONSTRAINT_TYPE = 'P'
SELECT CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'T_PERSONAL' AND CONSTRAINT_TYPE = 'P'
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'T_PERSONAL' AND CONSTRAINT_TYPE = 'R'
SELECT CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'T_PERSONAL' AND CONSTRAINT_TYPE = 'R'
-- 查看和表关联的外键
SELECT * FROM USER_CONSTRAINTS WHERE R_CONSTRAINT_NAME = (SELECT CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'T_PERSONAL' AND CONSTRAINT_TYPE = 'P')
SELECT COUNT(*) FROM USER_CONSTRAINTS WHERE R_CONSTRAINT_NAME = (SELECT CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'T_PERSONAL' AND CONSTRAINT_TYPE = 'P')

-- 查看表的列
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'T_RUNNING_LINE' ORDER BY COLUMN_ID;
SET ECHO OFF
SET HEADING OFF
SET FEEDBACK OFF
SET NEWPAGE 0
SELECT COLUMN_NAME FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'T_RUNNING_LINE' ORDER BY COLUMN_ID;

-- 表T_PERSONAL更新C_PERSONALID和C_BELONG字段会特别慢，而更新其它字段很快
-- 这是由于别的表建的外键和T_PERSONAL主键关联引起的
SELECT * FROM T_PERSONAL WHERE C_PERSONALID = 8238;
SELECT * FROM T_PERSONAL WHERE C_PERSONALID = 8888;
SELECT COUNT(*) FROM T_PERSONAL;
UPDATE T_PERSONAL SET C_PERSONALID = 8888 WHERE C_PERSONALID = 8238;
UPDATE T_PERSONAL SET C_WORKERID = '8888', C_PERSONALNAME = '孙弘宇' WHERE C_PERSONALID = 8888;
UPDATE T_PERSONAL SET C_BELONG = 2, C_POSITION = 1 WHERE C_PERSONALID = 8888;
-- 删除T_PERSONAL的子表关联后更新很快，或者在子表上建立FK对应的索引更新也会变快
ALTER TABLE PEADMIN.T_RUNNING_INCOME DROP CONSTRAINT FK_TRINCOMEPSN;
ALTER TABLE PEADMIN.T_RUNNING_INCOME ADD CONSTRAINT FK_TRINCOMEPSN FOREIGN KEY (C_BELONG, C_PSN) REFERENCES PEADMIN.T_PERSONAL (C_BELONG, C_PERSONALID);

EXPLAIN PLAN SET STATEMENT_ID = 'T_PERSONAL.C_PERSONALID.UPDATE' FOR UPDATE T_PERSONAL SET C_PERSONALID = 8888 WHERE C_PERSONALID = 8888;
SELECT A.OPERATION,OPTIONS,OBJECT_NAME,OBJECT_TYPE,ID,PARENT_ID FROM PLAN_TABLE A WHERE STATEMENT_ID = 'T_PERSONAL.C_PERSONALID.UPDATE' ORDER BY ID;

SELECT * FROM T_PSN_STATUS WHERE C_STATUSPSN = 8888;
SELECT * FROM T_PSN_ONLINE WHERE C_ONLINEPSN = 8888;
SELECT C_BELONG, C_PERSONALID, C_WORKERID, C_PERSONALNAME, C_POSITION FROM T_PERSONAL WHERE C_PERSONALID = 8888;
SELECT * FROM T_POSITION;

SELECT * FROM T_DEPARTMENT WHERE C_BELONG IN (2, 4) AND C_DEPARTMENTID = 2

-- 查看所有表的记录条数
SET SERVEROUT ON SIZE 20480;
EXEC SP_H01;

SELECT * FROM T_PERSONAL WHERE C_WORKERID = '6666';
SELECT * FROM T_SECURITY_USER WHERE C_USEID = '1188';
SELECT * FROM T_PERSONAL WHERE C_PERSONALID > 8244;

SELECT * FROM T_PSN_PEOPLE;
SELECT * FROM T_PSN_PARTY;
-- DELETE FROM T_PERSONAL WHERE C_PERSONALID > 8244;


-- 对机构4有权限的用户
SELECT SU.C_ID, SU.C_USEID, P.C_PERSONALNAME, SU.C_PSNBELONG, SU.C_PSNID, SU.C_GROUPID, 
SL.C_DESCRIPTION, SL.C_HRLIMIT, SL.C_HRLIMITDEPART FROM T_SECURITY_USER SU
LEFT JOIN T_BRANCH B1 ON SU.C_PSNBELONG = B1.C_BRANCHID
LEFT JOIN T_PERSONAL P ON SU.C_PSNID = P.C_PERSONALID
LEFT JOIN T_SECURITY_GROUP SG ON SU.C_GROUPID = SG.C_ID
RIGHT JOIN T_SECURITY_LIMIT SL ON SL.C_GROUPID = SG.C_ID
WHERE SL.C_BRANCHID = 4 ORDER BY SU.C_ID

SELECT * FROM T_SECURITY_USER WHERE C_GROUPID IN (SELECT C_GROUPID FROM T_SECURITY_LIMIT WHERE C_BRANCHID = 4)

-- 属于机构4的用户
SELECT SU.C_USEID, P.C_PERSONALNAME, SU.C_PSNBELONG, SU.C_PSNID, SU.C_GROUPID, 
SL.C_DESCRIPTION, SL.C_HRLIMIT, SL.C_HRLIMITDEPART FROM T_SECURITY_USER SU
LEFT JOIN T_BRANCH B1 ON SU.C_PSNBELONG = B1.C_BRANCHID
LEFT JOIN T_PERSONAL P ON SU.C_PSNID = P.C_PERSONALID
LEFT JOIN T_SECURITY_GROUP SG ON SU.C_GROUPID = SG.C_ID
RIGHT JOIN T_SECURITY_LIMIT SL ON SL.C_GROUPID = SG.C_ID
WHERE SU.C_PSNBELONG = 4 

-- 属于机构4的部门和处室
SELECT COUNT(DISTINCT D.C_DEPARTMENTID) FROM T_DEPARTMENT D, T_DEPARTTERM O WHERE D.C_BELONG=4 AND D.C_BELONG=O.C_BELONG AND D.C_DEPARTMENTID=O.C_DEPART
SELECT COUNT(*) FROM T_DEPARTMENT WHERE C_BELONG=4
SELECT * FROM T_DEPARTMENT D LEFT OUTER JOIN T_DEPARTTERM O ON D.C_BELONG=O.C_BELONG AND D.C_DEPARTMENTID=O.C_DEPART WHERE D.C_BELONG=4
SELECT COUNT(*) FROM (
SELECT * FROM T_DEPARTMENT D LEFT OUTER JOIN T_DEPARTTERM O ON D.C_BELONG=O.C_BELONG AND D.C_DEPARTMENTID=O.C_DEPART WHERE D.C_BELONG=4
) T
SELECT COUNT(DISTINCT C_DEPARTMENTID) FROM (
SELECT * FROM T_DEPARTMENT D LEFT OUTER JOIN T_DEPARTTERM O ON D.C_BELONG=O.C_BELONG AND D.C_DEPARTMENTID=O.C_DEPART WHERE D.C_BELONG=4
) T
SELECT C_DEPARTMENTID, COUNT(*) FROM T_DEPARTMENT GROUP BY C_DEPARTMENTID HAVING COUNT(*) > 1
SELECT D.C_DEPARTMENTID, COUNT(*) FROM T_DEPARTMENT D LEFT OUTER JOIN T_DEPARTTERM O ON D.C_BELONG=O.C_BELONG AND D.C_DEPARTMENTID=O.C_DEPART WHERE D.C_BELONG=4 GROUP BY D.C_DEPARTMENTID
SELECT C_DEPART, COUNT(*) FROM T_DEPARTTERM WHERE C_BELONG=4 GROUP BY C_DEPART
SELECT * FROM T_DEPARTTERM WHERE C_DEPART IN (9, 34, 35, 45, 46)

-- 属于机构和部门的营运车辆
SELECT C_ONLINEDEPARTMENT, C_DEPARTMENTNAME, COUNT(*) FROM T_ONLINE LEFT OUTER JOIN T_EQUIPMENT ON C_ONLINEEQUID=C_EQUID LEFT OUTER JOIN T_DEPARTMENT ON C_ONLINEDEPARTMENT=C_DEPARTMENTID
	WHERE T_ONLINE.C_BELONG=2 AND T_ONLINE.C_DOWNDATE >= TO_DATE('9999-12-31', 'yyyy-mm-dd') GROUP BY C_ONLINEDEPARTMENT, C_DEPARTMENTNAME;
SELECT * FROM T_ONLINE WHERE C_DOWNDATE >= TO_DATE('9999-12-31', 'yyyy-mm-dd');
SELECT MAX(C_DOWNDATE) FROM T_ONLINE;
SELECT COUNT(*) FROM T_ONLINE WHERE C_DOWNRESON IS NULL OR C_DOWNRESON = '';
SELECT COUNT(*) FROM T_ONLINE;
UPDATE T_ONLINE SET C_DOWNDATE = TO_DATE('9999-12-31', 'yyyy-mm-dd') WHERE C_DOWNRESON IS NULL OR C_DOWNRESON = '';
UPDATE T_ONLINE O1 SET O1.C_DOWNDATE = (SELECT MIN(C_ONDATE) - 1 FROM 
	T_ONLINE O2 WHERE O2.C_ONLINEEQUID = O1.C_ONLINEEQUID AND O2.C_BELONG = O1.C_BELONG AND O2.C_ONDATE > O1.C_ONDATE 
	HAVING COUNT(*) > 0);
SELECT * FROM T_ONLINE WHERE C_DOWNDATE >= TO_DATE('9999-12-31', 'yyyy-mm-dd') ORDER BY C_ONLINEEQUID;
SELECT * FROM T_ONLINE ORDER BY C_ONLINEEQUID;
SELECT * FROM T_ONLINE WHERE C_DOWNDATE IS NULL;
UPDATE T_ONLINE SET C_DOWNDATE = TO_DATE('9999-12-31', 'yyyy-mm-dd') WHERE C_DOWNDATE IS NULL;

-- 考勤计划
SELECT * FROM T_HRCHK_PLANDT ORDER BY C_HDNO, C_NO;
SELECT * FROM T_HRCHK_PLANDT WHERE C_HDNO='B09-000002' ORDER BY C_NO;

SELECT * FROM T_HRCHK_PLANDT WHERE C_DATE >= TO_DATE('2009-10-1', 'yyyy-mm-dd') AND C_DATE <= TO_DATE('2009-10-31', 'yyyy-mm-dd');
--DELETE FROM T_HRCHK_PLANDT WHERE C_PERSON=8287 AND C_DATE >= TO_DATE('2009-10-1', 'yyyy-mm-dd') AND C_DATE <= TO_DATE('2009-10-31', 'yyyy-mm-dd');
SELECT * FROM T_HRCHK_FACTDT WHERE C_DATE >= TO_DATE('2009-11-1', 'yyyy-mm-dd') AND C_DATE <= TO_DATE('2009-11-30', 'yyyy-mm-dd');
--DELETE FROM T_HRCHK_FACTDT WHERE C_PERSON=8287 AND C_DATE >= TO_DATE('2009-10-1', 'yyyy-mm-dd') AND C_DATE <= TO_DATE('2009-10-31', 'yyyy-mm-dd');
DELETE FROM T_HRCHK_FACTDT WHERE C_HDNO = 'C09-000012';

--考勤记录
INSERT INTO T_HRCHK_FACT SELECT C_BELONG, 'C09-000011', C_DATE, C_DEPART, C_OFFICE, C_CHECKDATE, C_CHECKBY, C_COMMENT FROM T_HRCHK_FACT WHERE C_NO = 'C09-000003';
INSERT INTO T_HRCHK_FACTDT SELECT C_BELONG, 'C09-000011', C_NO, C_PERSON, ADD_MONTHS(C_DATE,2), MOD(C_HLDAY,14)+1, MOD(C_WORK,4)+1, MOD(C_EXTR,3)+1, MOD(C_DISP,3)+1 FROM T_HRCHK_FACTDT WHERE C_HDNO = 'C09-000010';
INSERT INTO T_HRCHK_FACTDT SELECT C_BELONG, 'C09-000008', C_NO, C_PERSON, ADD_MONTHS(C_DATE,2), MOD(C_HLDAY,14)+1, MOD(C_WORK,4)+1, MOD(C_EXTR,3)+1, MOD(C_DISP,3)+1 FROM T_HRCHK_FACTDT WHERE C_HDNO = 'C09-000006';
--AND C_DATE <= TO_DATE('2009-3-30', 'yyyy-mm-dd');

SELECT C_HDNO, COUNT(*) FROM T_HRCHK_FACTDT GROUP BY C_HDNO;
SELECT * FROM T_HRCHK_FACTDT WHERE C_HDNO = 'C09-000004' ORDER BY C_NO;
SELECT C_NO, ADD_MONTHS(C_DATE,1) FROM T_HRCHK_FACTDT WHERE C_HDNO = 'C09-000003' ORDER BY C_NO;

SELECT C_PERSONALID, C_PERSONALNAME, C_WORKERID, C_DEPART, C_HRCHKGROUPID FROM T_PERSONAL WHERE C_DEPART = 2 AND C_HRCHKGROUPID = 2;
SELECT C_PERSONALID, C_PERSONALNAME, C_WORKERID, C_DEPART, C_HRCHKGROUPID FROM T_PERSONAL WHERE C_PERSONALID = 8287;
SELECT C_DEPARTMENTID, C_DEPARTMENTNAME FROM T_DEPARTMENT;

--考勤报表,需要考虑T_PSN_ONLINE
SELECT * FROM T_DEPARTMENT WHERE C_BELONG = 2 ORDER BY C_DEPARTMENTID;
SELECT * FROM T_PERSONAL WHERE C_WORKERID LIKE 'T%';
SELECT * FROM T_HRCHK_GROUP;
SELECT * FROM T_PSN_ONLINE WHERE C_ONLINEPSN = 8287 ORDER BY C_ONDATE;
--DELETE FROM T_PSN_ONLINE WHERE C_ONLINEPSN = 8287 AND C_ALLOTREASON = 'test';
SELECT * FROM T_PSN_ONLINE WHERE C_ONLINEPSN = 8286 ORDER BY C_ONDATE;
SELECT * FROM T_PSN_ONLINE WHERE C_ONLINEPSN = 8285 ORDER BY C_ONDATE;
SELECT C_PERSON, COUNT(*) FROM T_HRCHK_FACTDT GROUP BY C_PERSON; 

SELECT C_PERSON, C_HLDAY, COUNT(*) FROM T_HRCHK_FACTDT
WHERE C_PERSON IN (SELECT C_PERSONALID FROM T_PERSONAL WHERE C_DEPART = 2 AND C_HRCHKGROUPID = 2) 
AND C_HLDAY IS NOT NULL AND C_DATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd') AND C_DATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd')
GROUP BY C_PERSON, C_HLDAY ORDER BY C_PERSON, C_HLDAY;
SELECT C_PERSON, C_HLDAY, C_WORK, C_EXTR, C_DISP, COUNT(*) FROM T_HRCHK_FACTDT WHERE C_PERSON = 8287 GROUP BY C_PERSON, C_HLDAY, C_WORK, C_EXTR, C_DISP;

SELECT C_PERSON, C_WORK, COUNT(*) FROM T_HRCHK_FACTDT WHERE C_PERSON = 8287 GROUP BY C_PERSON, C_WORK; 
SELECT C_PERSON, C_EXTR, COUNT(*) FROM T_HRCHK_FACTDT WHERE C_PERSON = 8287 GROUP BY C_PERSON, C_EXTR; 
SELECT C_PERSON, C_DISP, COUNT(*) FROM T_HRCHK_FACTDT WHERE C_PERSON = 8287 GROUP BY C_PERSON, C_DISP; 

SELECT * FROM T_PSN_ONLINE WHERE C_DEPART = 2 AND C_ONDATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') AND C_DOWNDATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd')

--员工考勤表
SELECT DT.* FROM T_PSN_ONLINE O, T_HRCHK_FACTDT DT WHERE DT.C_PERSON = O.C_ONLINEPSN AND DT.C_DATE >= O.C_ONDATE AND DT.C_DATE <= O.C_DOWNDATE 
AND DT.C_PERSON = 8287 AND O.C_DEPART = 2 AND DT.C_DATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd') AND DT.C_DATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') 
ORDER BY DT.C_DATE; 
--员工考勤汇总表
SELECT DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP, COUNT(*) FROM T_PSN_ONLINE O, T_HRCHK_FACTDT DT 
WHERE DT.C_PERSON = O.C_ONLINEPSN AND DT.C_DATE >= O.C_ONDATE AND DT.C_DATE <= O.C_DOWNDATE 
AND O.C_DEPART = 2 AND DT.C_DATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd') AND DT.C_DATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') 
GROUP BY DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP;

SELECT DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP, COUNT(*) FROM T_PSN_ONLINE O, T_HRCHK_FACTDT DT 
WHERE DT.C_PERSON = O.C_ONLINEPSN AND DT.C_DATE >= O.C_ONDATE AND DT.C_DATE <= O.C_DOWNDATE 
AND DT.C_PERSON = 8287 AND O.C_DEPART = 2 AND DT.C_DATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd') AND DT.C_DATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') 
GROUP BY DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP;

SELECT DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP, COUNT(*) FROM T_PSN_ONLINE O, T_HRCHK_FACTDT DT 
WHERE DT.C_PERSON = O.C_ONLINEPSN AND DT.C_DATE >= O.C_ONDATE AND DT.C_DATE <= O.C_DOWNDATE 
AND DT.C_PERSON = 8285 AND O.C_DEPART = 2 AND DT.C_DATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd') AND DT.C_DATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') 
GROUP BY DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP;

SELECT DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP, COUNT(*) FROM T_PSN_ONLINE O, T_HRCHK_FACTDT DT 
WHERE DT.C_PERSON = O.C_ONLINEPSN AND DT.C_DATE >= O.C_ONDATE AND DT.C_DATE <= O.C_DOWNDATE 
AND DT.C_PERSON = 8888 AND O.C_DEPART = 2 AND DT.C_DATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd') AND DT.C_DATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') 
GROUP BY DT.C_PERSON, DT.C_HLDAY, DT.C_WORK, DT.C_EXTR, DT.C_DISP;

SELECT C_PERSONALNAME, C_WORKERID, O.C_ONDATE, O.C_DOWNDATE FROM T_PSN_ONLINE O, T_PERSONAL P 
WHERE C_ONLINEPSN = C_PERSONALID AND O.C_DEPART = 1 AND O.C_DOWNDATE >= TO_DATE('2009-1-1', 'yyyy-mm-dd')
AND O.C_ONDATE <= TO_DATE('2009-12-31', 'yyyy-mm-dd') ORDER BY P.C_WORKERID;

SELECT C_NO, C_NAME, C_FLAG, C_TYPE, C_PRINT FROM T_HRSAL_ITEM ORDER BY C_NO;
SELECT C_PERSONALID, C_PERSONALNAME, C_WORKERID FROM T_PERSONAL WHERE C_WORKERID LIKE 'T%';
